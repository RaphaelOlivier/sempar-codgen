class Argent #MERGE# Commander ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Stalker " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , charge = True
class Argent #MERGE# Wolf #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Drake " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , taunt
class Argent #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) , picker = User #MERGE# Picker ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self ,
class Whelp ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 ,
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . RARE , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game )
class Arcane #MERGE# Spell ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 1 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . hero
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion (
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 1 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self ) #NEWLINE# #INDENT#
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 ,
class Argent #MERGE# Wolf #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Axe " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT#
class Argent #MERGE# Wolf #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Stalker " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2
class Argent #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) , picker = User #MERGE# Picker ( ) ) )
class Argent #MERGE# Commander ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON , False , MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 , taunt = True
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . damage ( player . effective_spell_damage
class Argent #MERGE# Commander ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 , charge = True , taunt
class . #MERGE# Of #MERGE# The #MERGE# The #MERGE# : #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent of the ALL , CARD_RARITY . LEGENDARY ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) )
class . #MERGE# Of #MERGE# The #MERGE# Kings ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . HUNTER , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give
class . #MERGE# Spell ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of Kings " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . draw ( )
class . #MERGE# Of #MERGE# The #MERGE# The #MERGE# __init__ ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CHARACTER_CLASS . WARLOCK , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Self #MERGE# Selector ( )
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . RARE , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class , #MERGE# #MERGE# Card #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 2 , CHARACTER_CLASS . WARLOCK , CARD_RARITY . RARE , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Character #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) , Player #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Argent #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) , picker = User #MERGE# Picker ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE#
class Argent #MERGE# Commander ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Commander " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 2 , deathrattle = Deathrattle ( Summon ( )
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . LEGENDARY ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( Change #MERGE# Attack ( 1 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) , Player #MERGE# Selector (
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 2 , CHARACTER_CLASS . WARLOCK , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) , Player #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player )
class . #MERGE# Of #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CHARACTER_CLASS . PRIEST , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Self #MERGE# Selector ( ) ) ) ] )
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . RARE , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 2 , CHARACTER_CLASS . WARLOCK , CARD_RARITY . RARE , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) , Self #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE#
class . #MERGE# Of #MERGE# The #MERGE# __init__ ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 5 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( ) , Player #MERGE# Selector ( ) ) )
class . #MERGE# Of #MERGE# The #MERGE# create_minion ( ) ) ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . LEGENDARY , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag (
class , #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent = " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 2 ) , Self #MERGE#
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . HUNTER , CARD_RARITY . LEGENDARY , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player (
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . RARE , minion_type = MINION_TYPE . MECH , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) ) , Player #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Argent #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 ,
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class . #MERGE# Spell ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . damage ( player . effective_spell_damage ( 2 ) ,
class . #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . damage ( player . effective_spell_damage ( 2 )
class . #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# #INDENT#
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return
class , #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . HUNTER , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) , Self #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player
class Argent #MERGE# #MERGE# Of #MERGE# The #MERGE# The #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent #INDENT# def __init__ ( " , 3 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( )
class . #MERGE# Of #MERGE# Of #MERGE# The #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . append ( game . player , game ) #NEWLINE# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# super ( ) . reveal ( ) #NEWLINE# #INDENT# #INDENT# #INDENT# super
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 ,
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , taunt =
class . #MERGE# Spell ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of Kings " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . damage ( player . effective_spell_damage ( 2 )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 2 , CHARACTER_CLASS . HUNTER , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return
class Dark #MERGE# : #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent of the the Pain " , 2 , CHARACTER_CLASS . WARLOCK , CARD_RARITY . RARE , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 2 ) ) , Character #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2
class . #MERGE# Of #MERGE# The #MERGE# __init__ ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Minion #MERGE# Selector ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . LEGENDARY ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( )
class Argent #MERGE# #MERGE# Of #MERGE# The #MERGE# super ( ) ) ) ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ,
class . #MERGE# Of #MERGE# Of #MERGE# The #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . append ( game . player , game ) #NEWLINE# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# super (
class . #MERGE# Of #MERGE# Of #MERGE# The #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def __init__ ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 4 , self , game , player )
class . #MERGE# Of #MERGE# Of #MERGE# The #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# #INDENT# self . __init__ ( " , player , target_func = hearthbreaker . MECH ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# #INDENT# def create_minion ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self ) #NEWLINE# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT# #INDENT#
class . #MERGE# Of #MERGE# Of #MERGE# The #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , CARD_RARITY . def __init__ ( player , game ) : #NEWLINE# #INDENT# #INDENT# self . target . append ( " character_attack " , 0 ) : #NEWLINE# #INDENT# #INDENT# #INDENT# super ( ) . __init__ ( " , self , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use
class . #MERGE# Spell ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self )
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON , False , MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion (
class Argent #MERGE# #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( ) . __init__ ( " , 3 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , deathrattle = Deathrattle ( Summon ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) ] )
class Argent #MERGE# Commander ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , charge
class . #MERGE# Spell ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 1 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion (
class . #MERGE# Of #MERGE# The #MERGE# The #MERGE# create_minion ( ) ) ) : #NEWLINE# #INDENT# def __init__ ( ) ) ) : #NEWLINE# #INDENT# super ( ) . use ( " Argent of the the Claw ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . LEGENDARY , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended
class , #MERGE# #MERGE# Card #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . RARE , minion_type = MINION_TYPE . MECH , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) ) , Player #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# for minion in copy . copy ( game . other_player . minions ) : #NEWLINE# #INDENT# #INDENT#
