class Archmage ( ) : def __init__ ( self ) : super ( ) . __init__ ( Archmage , 7 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Booty ( ) : def __init__ ( self ) : super ( ) . __init__ ( Booty , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 5 , 5 ) 
class Darkscale ( ) : def __init__ ( self ) : super ( ) . __init__ ( Darkscale , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Fiery ( ) : def __init__ ( self ) : super ( ) . __init__ ( Fiery , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Frostwolf ( ) : def __init__ ( self ) : super ( ) . __init__ ( Frostwolf , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Hellfire ( ) : def __init__ ( self ) : super ( ) . __init__ ( Hellfire , 4 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Innervate ( ) : def __init__ ( self ) : super ( ) . __init__ ( Innervate , 0 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Magma ( ) : def __init__ ( self ) : super ( ) . __init__ ( Rager , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 5 , 5 ) 
class Mortal ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 1 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Polymorph ( ) : def __init__ ( self ) : super ( ) . __init__ ( Polymorph , 4 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Searing ( ) : def __init__ ( self ) : super ( ) . __init__ ( Searing , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Silverback ( ) : def __init__ ( self ) : super ( ) . __init__ ( Silverback , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Stormwind ( ) : def __init__ ( self ) : super ( ) . __init__ ( Stormwind , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Voodoo ( ) : def __init__ ( self ) : super ( ) . __init__ ( Voodoo , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Wrath ( ) : def __init__ ( self ) : super ( ) . __init__ ( of , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 0 , 0 ) 
class Astral ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 4 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Annoy - o - Tron ( ) : def __init__ ( self ) : super ( ) . __init__ ( Annoy - o - Tron , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Burly ( ) : def __init__ ( self ) : super ( ) . __init__ ( Rockjaw , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Cogmaster ( ) : def __init__ ( self ) : super ( ) . __init__ ( Cogmaster , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Echo ( ) : def __init__ ( self ) : super ( ) . __init__ ( of , 4 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Floating ( ) : def __init__ ( self ) : super ( ) . __init__ ( Floating , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Gnomish ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Iron ( ) : def __init__ ( self ) : super ( ) . __init__ ( Iron , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 6 , 6 ) 
class Madder ( ) : def __init__ ( self ) : super ( ) . __init__ ( Madder , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 5 , 5 ) 
class Mini - Mage ( ) : def __init__ ( self ) : super ( ) . __init__ ( Mini - Mage , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , 4 ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Piloted ( ) : def __init__ ( self ) : super ( ) . __init__ ( Piloted , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 6 , 6 ) 
class Scarlet ( ) : def __init__ ( self ) : super ( ) . __init__ ( Scarlet , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Siltfin ( ) : def __init__ ( self ) : super ( ) . __init__ ( Siltfin , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 5 ) 
class Tinkertown ( ) : def __init__ ( self ) : super ( ) . __init__ ( Tinkertown , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Voljin ( ) : def __init__ ( self ) : super ( ) . __init__ ( " Voljin " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 6 , 6 ) 
class Death ( ) : def __init__ ( self ) : super ( ) . __init__ ( Death , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Maexxna ( ) : def __init__ ( self ) : super ( ) . __init__ ( Maexxna , 8 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Sludge ( ) : def __init__ ( self ) : super ( ) . __init__ ( Sludge , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Voidcaller ( ) : def __init__ ( self ) : super ( ) . __init__ ( Voidcaller , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Alexstrasza ( ) : def __init__ ( self ) : super ( ) . __init__ ( Alexstrasza , 8 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 8 , 8 ) 
class Arcane ( ) : def __init__ ( self ) : super ( ) . __init__ ( Arcane , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Give ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Baine ( ) : def __init__ ( self ) : super ( ) . __init__ ( Baine , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , 4 ( ) ) ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Blade ( ) : def __init__ ( self ) : super ( ) . __init__ ( Blade , 2 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Brawl ( ) : def __init__ ( self ) : super ( ) . __init__ ( Brawl , 5 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Conceal ( ) : def __init__ ( self ) : super ( ) . __init__ ( Conceal , 1 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Defender ( ) : def __init__ ( self ) : super ( ) . __init__ ( Defender , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Doomguard ( ) : def __init__ ( self ) : super ( ) . __init__ ( Doomguard , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 5 , 5 ) 
class Earth ( ) : def __init__ ( self ) : super ( ) . __init__ ( Elemental , 8 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 7 , 7 ) 
class Explosive ( ) : def __init__ ( self ) : super ( ) . __init__ ( Trap , 2 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Flame ( ) : def __init__ ( self ) : super ( ) . __init__ ( of , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Gnoll ( ) : def __init__ ( self ) : super ( ) . __init__ ( Gnoll , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , 2 ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Holy ( ) : def __init__ ( self ) : super ( ) . __init__ ( Holy , 5 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Infernal ( ) : def __init__ ( self ) : super ( ) . __init__ ( Infernal , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , 6 ( ) ) ) def create_minion ( self , player ) : return Minion ( 6 , 6 ) 
class Kirin ( ) : def __init__ ( self ) : super ( ) . __init__ ( Kirin , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 4 , 4 ) 
class Lightwarden ( ) : def __init__ ( self ) : super ( ) . __init__ ( Lightwarden , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Mana ( ) : def __init__ ( self ) : super ( ) . __init__ ( Mana , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Misdirection ( ) : def __init__ ( self ) : super ( ) . __init__ ( Misdirection , 2 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Noble ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 1 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Power ( ) : def __init__ ( self ) : super ( ) . __init__ ( of , 2 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Redemption ( ) : def __init__ ( self ) : super ( ) . __init__ ( Redemption , 1 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Shadow ( ) : def __init__ ( self ) : super ( ) . __init__ ( Shadow , 4 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Siphon ( ) : def __init__ ( self ) : super ( ) . __init__ ( Soul , 6 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Spellbender ( ) : def __init__ ( self ) : super ( ) . __init__ ( Spellbender , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Summoning ( ) : def __init__ ( self ) : super ( ) . __init__ ( Summoning , 4 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 0 , 4 ) 
class Thrallmar ( ) : def __init__ ( self ) : super ( ) . __init__ ( Thrallmar , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Upgrade ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 1 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
class Wisp ( ) : def __init__ ( self ) : super ( ) . __init__ ( Wisp , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) def create_minion ( self , player ) : return Minion ( 1 , 1 ) 
class Black ( ) : def __init__ ( self ) : super ( ) . __init__ ( Whelp , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Whelp ( ) ) ) def create_minion ( self , player ) : return Minion ( 2 , 2 ) 
class Dragonkin ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 3 , 3 ) 
class Hungry ( ) : def __init__ ( self ) : super ( ) . __init__ ( Hungry , 6 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = Battlecry ( Give ( 1 ) , Buff ( ) ) ) def create_minion ( self , player ) : return Minion ( 5 , 5 ) 
class Solemn ( ) : def __init__ ( self ) : super ( ) . __init__ ( , 5 , CHARACTER_CLASS . , CHARACTER_CLASS . COMMON , target_func = hearthbreaker . targeting . ) def use ( self , player , game ) : super ( ) . use ( player , game ) self . target . ( player ) 
