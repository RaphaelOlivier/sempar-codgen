(root (ClassDef (str{name}{val=AcidicSwampOoze}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Acidic Swamp Ooze})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Destroy})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=AncestralHealing}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancestral Healing})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_max_health}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=taunt}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))))
(root (ClassDef (str{name}{val=AnimalCompanion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Animal Companion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=beast_list}))) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=hunter}))) (str{attr}{val=Huffer}))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=hunter}))) (str{attr}{val=Misha}))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=hunter}))) (str{attr}{val=Leokk}))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=beast_list}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=ArcaneExplosion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Explosion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=ArcaneIntellect}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Intellect})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
(root (ClassDef (str{name}{val=ArcaneMissiles}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Missiles})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))
(root (ClassDef (str{name}{val=ArcaneShot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Shot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=ArcaniteReaper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcanite Reaper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Assassinate}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Assassinate})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Backstab}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Backstab})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_max_health}))))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=BlessingOfKings}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blessing of Kings})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})))))))))))
(root (ClassDef (str{name}{val=BlessingOfMight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blessing of Might})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))
(root (ClassDef (str{name}{val=BloodfenRaptor}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bloodfen Raptor})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Bloodlust}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bloodlust})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))))
(root (ClassDef (str{name}{val=BluegillWarrior}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bluegill Warrior})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Boar}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Boar})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Charge}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Charge})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=_Charge}))))))))))))))
(root (ClassDef (str{name}{val=ChillwindYeti}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Chillwind Yeti})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=Claw}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Claw})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=increase_armor}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))
(root (ClassDef (str{name}{val=Cleave}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cleave})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minions})) (str{attr}{val=remove}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))))))
(root (ClassDef (str{name}{val=Consecration}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Consecration})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=CoreHound}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Core Hound})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=Corruption}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Corruption})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_effect}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=DalaranMage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dalaran Mage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=DivineSpirit}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Divine Spirit})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health})))))))))))
(root (ClassDef (str{name}{val=DragonlingMechanic}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dragonling Mechanic})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MechanicalDragonling})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DrainLife}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Drain Life})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=DreadInfernal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dread Infernal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=ElvenArcher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Elven Archer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=ExcessMana}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Excess Mana})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Execute}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Execute})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (NotEq))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_max_health}))))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=FanOfKnives}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fan of Knives})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Fireball}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fireball})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Flamestrike}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flamestrike})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=FlametongueTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flametongue Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent})))))))))))))))))))
(root (ClassDef (str{name}{val=Frog}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frog})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=FrostNova}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frost Nova})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))))))))
(root (ClassDef (str{name}{val=FrostShock}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frost Shock})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))))))
(root (ClassDef (str{name}{val=Frostbolt}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frostbolt})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))))))
(root (ClassDef (str{name}{val=FrostwolfGrunt}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frostwolf Grunt})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=GoldshireFootman}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Goldshire Footman})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=GrimscaleOracle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Grimscale Oracle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))))
(root (ClassDef (str{name}{val=GuardianOfKings}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Guardian of Kings})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=GurubashiBerserker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gurubashi Berserker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterDamaged})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionIsTarget})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=HammerOfWrath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hammer of Wrath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=HandOfProtection}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hand of Protection})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=divine_shield}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))))
(root (ClassDef (str{name}{val=HealingTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Healing Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))))))))))))))
(root (ClassDef (str{name}{val=HealingTouch}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Healing Touch})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Hex}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hex})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=frog}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=neutral}))) (str{attr}{val=Frog}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=frog})) (str{attr}{val=create_minion}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=frog})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=replace}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))))))))))
(root (ClassDef (str{name}{val=HolyLight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Holy Light})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=HolyNova}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Holy Nova})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=HolySmite}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Holy Smite})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Houndmaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Houndmaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=NONE})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Huffer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Huffer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Humility}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Humility})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (BinOp (expr{left} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (operator{op} (Sub)) (expr{right} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_attack}))))))))))))))
(root (ClassDef (str{name}{val=HuntersMark}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hunter's Mark})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=set_health_to}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=IronforgeRifleman}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ironforge Rifleman})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=NONE})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=IronfurGrizzly}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ironfur Grizzly})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=KillCommand}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kill Command})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=beasts}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_battlecry_target}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=x})))) (expr{body} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=x})) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=beasts})) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=KoboldGeomancer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kobold Geomancer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=KorkronElite}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kor'kron Elite})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Leokk}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Leokk})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})))))))))))))))))
(root (ClassDef (str{name}{val=LightsJustice}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Light's Justice})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=LordOfTheArena}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lord of the Arena})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=MechanicalDragonling}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mechanical Dragonling})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=MindBlast}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mind Blast})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=MindControl}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mind Control})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_minion}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=copy}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=remove_from_board}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=new_minion})) (str{attr}{val=add_to_board}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=MindVision}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mind Vision})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hand}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=deepcopy}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hand}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))))))))))))
(root (ClassDef (str{name}{val=MirrorImage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mirror Image})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MirrorImageMinion})))) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=MirrorImage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mirror Image})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MirrorImageMinion})))) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=Misha}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Misha})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Moonfire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Moonfire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=MurlocRaider}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Murloc Raider})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=MurlocScout}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Murloc Scout})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=MurlocTidehunter}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Murloc Tidehunter})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MurlocScout})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Nightblade}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nightblade})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=NorthshireCleric}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Northshire Cleric})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterHealed})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))) (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=NoviceEngineer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Novice Engineer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=OasisSnapjaw}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Oasis Snapjaw})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=OgreMagi}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ogre Magi})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=RaidLeader}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Raid Leader})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})))))))))))))))))
(root (ClassDef (str{name}{val=RazorfenHunter}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Razorfen Hunter})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Boar})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=RecklessRocketeer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Reckless Rocketeer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=RiverCrocolisk}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=River Crocolisk})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=RockbiterWeapon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Rockbiter Weapon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))
(root (ClassDef (str{name}{val=SacrificialPact}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sacrificial Pact})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=character})))) (expr{body} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Sap}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sap})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=bounce})))))))))))
(root (ClassDef (str{name}{val=SavageRoar}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Savage Roar})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))
(root (ClassDef (str{name}{val=ShadowBolt}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadow Bolt})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=ShadowWordDeath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadow Word: Death})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_attack}))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=ShadowWordPain}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadow Word: Pain})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_attack}))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=ShatteredSunCleric}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shattered Sun Cleric})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Sheep}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sheep})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=ShieldBlock}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shield Block})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=increase_armor}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Shiv}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shiv})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=SilverHandRecruit}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Silver Hand Recruit})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Soulfire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Soulfire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=discard})))))))))))
(root (ClassDef (str{name}{val=Sprint}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sprint})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
(root (ClassDef (str{name}{val=Starfire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Starfire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=StarvingBuzzard}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Starving Buzzard})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionPlaced})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=StoneclawTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stoneclaw Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=StonetuskBoar}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stonetusk Boar})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=StormpikeCommando}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stormpike Commando})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=StormwindChampion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stormwind Champion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=Swipe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Swipe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=TimberWolf}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Timber Wolf})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))))))))))))))
(root (ClassDef (str{name}{val=TotemicMight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Totemic Might})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))))))
(root (ClassDef (str{name}{val=Tracking}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tracking})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=cards}))) (expr{value} (List (epsilon))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=card_index})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt*{body} (stmt (If (expr{test} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=can_draw}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=cards})) (str{attr}{val=append}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=deck}))) (str{attr}{val=draw}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=cards}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=chosen_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=cards})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=chosen_card}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_drawn})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=chosen_card}))))))))))))))
(root (ClassDef (str{name}{val=TruesilverChampion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Truesilver Champion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsHero})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=TundraRhino}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tundra Rhino})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Charge})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))))))))))))))
(root (ClassDef (str{name}{val=Vanish}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Vanish})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=sorted})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (keyword*{keywords} (keyword (str{arg}{val=key}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=m})))) (expr{body} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=m})) (str{attr}{val=born}))))))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=bounce})))))))))))))
(root (ClassDef (str{name}{val=Voidwalker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Voidwalker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=WarsongCommander}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Warsong Commander})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionPlaced})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackLessThanOrEqualTo})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Charge})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=WaterElemental}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Water Elemental})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DidDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Whirlwind}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whirlwind})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=WickedKnife}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wicked Knife})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=WildGrowth}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wild Growth})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=max_mana}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=max_mana}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (stmt*{orelse} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ExcessMana})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))))))))))))
(root (ClassDef (str{name}{val=Windfury}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Windfury})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=_Windfury}))))))))))))))
(root (ClassDef (str{name}{val=Windspeaker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Windspeaker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Windfury})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Wolfrider}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wolfrider})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=AlexstraszasChampion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Alexstrasza's Champion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Charge}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=AncestralKnowledge}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancestral Knowledge})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
(root (ClassDef (str{name}{val=Anubarak}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Anub'arak})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Bounce})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Nerubian})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=ArcaneBlast}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Blast})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (BinOp (expr{left} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (operator{op} (Add)) (expr{right} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=spell_damage})))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=ArgentHorserider}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Argent Horserider})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=ArgentLance}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Argent Lance})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Joust})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseDurability})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=ArgentWatchman}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Argent Watchman})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CantAttack})))))))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UsedPower})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CanAttack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=ArmoredWarhorse}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Armored Warhorse})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Joust})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Charge})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=HealingTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Healing Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))))))))))))))
(root (ClassDef (str{name}{val=Nerubian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nerubian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=SearingTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Searing Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=StoneclawTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stoneclaw Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=TournamentMedic}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tournament Medic})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UsedPower})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=WrathOfAirTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wrath of Air Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=AncestorsCall}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancestor's Call})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (BoolOp (boolop{op} (Or)) (expr*{values} (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})))))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=players}))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))) (expr{value} (ListComp (expr{elt} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (comprehension*{generators} (comprehension (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (expr*{ifs} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=is_minion}))))))))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card})) (str{attr}{val=unattach}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=remove}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))))))))))))
(root (ClassDef (str{name}{val=AnimaGolem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Anima Golem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCountIs})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=AntiqueHealbot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Antique Healbot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=ArcaneNullifierX21}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Nullifier X-21})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=spell_targetable}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False})))))))))))
(root (ClassDef (str{name}{val=ArmorPlating}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Armor Plating})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=Blingtron3000}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blingtron 3000})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Equip})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsWeapon}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=BolvarFordragon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bolvar Fordragon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=BombLobber}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bomb Lobber})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=BoomBot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Boom Bot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomAmount})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))
(root (ClassDef (str{name}{val=BouncingBlade}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bouncing Blade})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (BinOp (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (operator{op} (Add)) (expr{right} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=minions}))))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (BinOp (expr{left} (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (slice{slice} (Slice (epsilon))))) (operator{op} (Add)) (expr{right} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=minions}))) (slice{slice} (Slice (epsilon))))))))) (stmt (If (expr{test} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))) (stmt*{body} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=bounces})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=80}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (If (expr{test} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=dead}))) (stmt*{body} (stmt (Break)))))))))))))))))
(root (ClassDef (str{name}{val=CallPet}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Call Pet})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (FunctionDef (str{name}{val=reduce_cost}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=is_minion}))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-4})))))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind_once}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_drawn})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=reduce_cost}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Chicken}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Chicken})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=ClockworkGiant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Clockwork Giant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=ClockworkGnome}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Clockwork Gnome})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.spells.neutral}) (alias*{names} (alias (str{name}{val=spare_part_list}))) (int{level}{val=0}))) (stmt (Return (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spare_part_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))))
(root (ClassDef (str{name}{val=CobaltGuardian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cobalt Guardian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DivineShield})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=CobraShot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cobra Shot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Coghammer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Coghammer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DivineShield})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Cogmaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cogmaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))))))))))))))
(root (ClassDef (str{name}{val=Crush}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Crush})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsDamaged})))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=DarkWispers}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dark Wispers})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (BoolOp (boolop{op} (Or)) (expr*{values} (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))) (expr (Compare (expr{left} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=t})))) (expr{body} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=t})) (str{attr}{val=spell_targetable})))))))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})))))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ClassDef (str{name}{val=Buff5}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Give a minion +5/+5 and Taunt})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (Compare (expr{left} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=t})))) (expr{body} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=t})) (str{attr}{val=spell_targetable})))))))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=t})))) (expr{body} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=t})) (str{attr}{val=spell_targetable})))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=agent}))) (str{attr}{val=choose_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=taunt}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))) (stmt (ClassDef (str{name}{val=Wisps5}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Summon 5 Wisps})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.neutral}) (alias*{names} (alias (str{name}{val=Wisp}))) (int{level}{val=0}))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=wisp}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Wisp})))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=wisp})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))))))))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=t})))) (expr{body} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=t})) (str{attr}{val=spell_targetable})))))))))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Wisps5}))))))) (stmt*{orelse} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Wisps5})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff5})))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=option})) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))
(root (ClassDef (str{name}{val=Darkbomb}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Darkbomb})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Demonheart}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Demonheart})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (cmpop*{ops} (cmpop (In))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=DoctorBoom}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dr. Boom})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BoomBot})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=DruidOfTheFang}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Fang})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CobraForm})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DruidOfTheFang}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Fang})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CobraForm})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DunemaulShaman}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dunemaul Shaman})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeTarget})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=NotCurrentTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OneIn})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OpponentMinionCountIsGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=EnhanceoMechano}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Enhance-o Mechano})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Windfury})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DivineShield})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=ExplosiveSheep}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Explosive Sheep})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=FeignDeath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Feign Death})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=sorted})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (keyword*{keywords} (keyword (str{arg}{val=key}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=m})))) (expr{body} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=m})) (str{attr}{val=born}))))))))) (stmt*{body} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=deathrattle})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=deathrattle}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=deathrattle})) (str{attr}{val=do}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))))))) (stmt (If (expr{test} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=double_deathrattle}))) (stmt*{body} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=deathrattle})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=deathrattle}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=deathrattle})) (str{attr}{val=do}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))))))))))))))))))
(root (ClassDef (str{name}{val=FelCannon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fel Cannon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Not})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})))))))))))))))))))))))
(root (ClassDef (str{name}{val=FelReaver}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fel Reaver})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Discard})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=query}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=MY_DECK}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=FinickyCloakfield}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Finicky Cloakfield})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stealth})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))))))))))))))
(root (ClassDef (str{name}{val=FlameLeviathan}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flame Leviathan})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Drawn})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=Flamecannon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flamecannon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_battlecry_target}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=x})))) (expr{body} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))))))))
(root (ClassDef (str{name}{val=FoeReaper4000}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Foe Reaper 4000})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=attack})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetAdjacent})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))))))))))))))))))
(root (ClassDef (str{name}{val=ForceTankMAX}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Force-Tank MAX})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Gahzrilla}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gahz'rilla})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DoubleAttack})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=GallywixsCoin}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gallywix's Coin})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))))
(root (ClassDef (str{name}{val=Gazlowe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gazlowe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaCost})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=GilblinStalker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gilblin Stalker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Glaivezooka}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Glaivezooka})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=GnomereganInfantry}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gnomeregan Infantry})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=GoblinBlastmage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Goblin Blastmage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=GoblinSapper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Goblin Sapper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=5})))))))))))))))))))
(root (ClassDef (str{name}{val=GroveTender}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Grove Tender})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiftOfMana})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveManaCrystal})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiftOfCards})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=HemetNesingwary}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hemet Nesingwary})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Hobgoblin}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hobgoblin})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionPlaced})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BaseAttackEqualTo})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Illuminator}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Illuminator})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasSecret})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Imp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Imp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Implosion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Imp-losion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=amount}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_amount}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=had_shield}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=divine_shield}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=amount})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (If (expr{test} (UnaryOp (unaryop{op} (Not)) (expr{operand} (str{expr$->$(Name)@Name$->$(str{id})}{val=had_shield})))) (stmt*{body} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=amount}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=imp}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Imp})))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=imp})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))))))))))))
(root (ClassDef (str{name}{val=Jeeves}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Jeeves})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Difference})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer})))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer}))))))))))))))))))))))
(root (ClassDef (str{name}{val=Junkbot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Junkbot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=KezanMystic}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kezan Mystic})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ApplySecret})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=ENEMY_SECRETS}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=KingOfBeasts}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=King of Beasts})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=LightOfTheNaaru}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Light of the Naaru})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=lightwarden}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Lightwarden})))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=lightwarden})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))) (stmt*{orelse} (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (NotEq))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_max_health}))))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=lightwarden})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))))))))))))
(root (ClassDef (str{name}{val=Lightbomb}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lightbomb})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=calculate_attack}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=LilExorcist}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lil' Exorcist})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionHasDeathrattle})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionHasDeathrattle})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=LostTallstrider}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lost Tallstrider})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Malorne}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Malorne})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=MINION})))) (keyword (str{arg}{val=minion}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))) (keyword*{keywords} (keyword (str{arg}{val=add_to_deck}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Remove})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=MechBearCat}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mech-Bear-Cat})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spare_part_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=MechanicalYeti}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mechanical Yeti})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.spells.neutral}) (alias*{names} (alias (str{name}{val=spare_part_list}))) (int{level}{val=0}))) (stmt (Return (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spare_part_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))))))))))))
(root (ClassDef (str{name}{val=Mechwarper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mechwarper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))))))))))))))))
(root (ClassDef (str{name}{val=MekgineerThermaplugg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mekgineer Thermaplugg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=LeperGnome})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=MetaltoothLeaper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Metaltooth Leaper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=MicroMachine}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Micro Machine})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=MimironsHead}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mimiron's Head})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=V07TR0N})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))))
(root (ClassDef (str{name}{val=MogorTheOgre}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mogor the Ogre})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterAttack})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeTarget})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=NotCurrentTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OneIn})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OpponentMinionCountIsGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=MusterForBattle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Muster for Battle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=dude}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SilverHandRecruit})))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=dude})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=justice}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=LightsJustice})))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=hammer}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=justice})) (str{attr}{val=create_weapon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hammer})) (str{attr}{val=card}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=justice})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hammer})) (str{attr}{val=equip}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))))))))))
(root (ClassDef (str{name}{val=Neptulon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.neutral}) (alias*{names} (alias (str{name}{val=BluegillWarrior})) (alias (str{name}{val=ColdlightOracle})) (alias (str{name}{val=ColdlightSeer})) (alias (str{name}{val=GrimscaleOracle})) (alias (str{name}{val=MurlocRaider})) (alias (str{name}{val=MurlocTidecaller})) (alias (str{name}{val=MurlocTidehunter})) (alias (str{name}{val=MurlocWarleader})) (alias (str{name}{val=OldMurkEye})) (alias (str{name}{val=Puddlestomper}))) (int{level}{val=0}))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=murloc_list}))) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BluegillWarrior})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ColdlightOracle})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ColdlightSeer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GrimscaleOracle})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MurlocRaider})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MurlocTidecaller})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MurlocTidehunter})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MurlocWarleader})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OldMurkEye})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Puddlestomper})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SiltfinSpiritwalker})))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Neptulon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=murloc_list})))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=OgreBrute}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ogre Brute})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeTarget})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=NotCurrentTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OneIn})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OpponentMinionCountIsGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=OgreNinja}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ogre Ninja})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeTarget})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=NotCurrentTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OneIn})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OpponentMinionCountIsGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=OgreWarmaul}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ogre Warmaul})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsHero})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeTarget})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=NotCurrentTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OneIn})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OpponentMinionCountIsGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=OneeyedCheat}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=One-eyed Cheat})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stealth})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=PilotedShredder}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Piloted Shredder})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaCost})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Puddlestomper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Puddlestomper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Quartermaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Quartermaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasCardName})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Silver Hand Recruit})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=Recombobulator}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Recombobulator})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaCost})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=mana})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Recycle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Recycle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=deck}))) (str{attr}{val=put_back}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=remove_from_board})))))))))))
(root (ClassDef (str{name}{val=ReversingSwitch}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Reversing Switch})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=temp_attack}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_attack}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=temp_health}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health}))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=temp_attack})) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{orelse} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=set_attack_to}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=temp_health}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=set_health_to}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=temp_attack}))))))))))))))
(root (ClassDef (str{name}{val=RustyHorn}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Rusty Horn})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt}))))))))))))))
(root (ClassDef (str{name}{val=Sabotage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sabotage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_battlecry_target}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=x})))) (expr{body} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=check_delayed}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=cards_played}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=weapon}))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})))))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=weapon}))) (str{attr}{val=destroy})))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))))))))
(root (ClassDef (str{name}{val=SaltyDog}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Salty Dog})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=SealOfLight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Seal of Light})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))
(root (ClassDef (str{name}{val=Shadowbomber}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadowbomber})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Shadowboxer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadowboxer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterHealed})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))) (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))))))))))))))
(root (ClassDef (str{name}{val=ShieldedMinibot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shielded Minibot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Shieldmaiden}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shieldmaiden})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseArmor})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=ShipsCannon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ship's Cannon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})))))))))))))))))))))))
(root (ClassDef (str{name}{val=Shrinkmeister}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shrinkmeister})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=SiegeEngine}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Siege Engine})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ArmorIncreased})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Snowchugger}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Snowchugger})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DidDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=SootSpewer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Soot Spewer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=SpiderTank}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spider Tank})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=SteamwheedleSniper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Steamwheedle Sniper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PowerTargetsMinions})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})))))))))))))))))
(root (ClassDef (str{name}{val=StonesplinterTrogg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stonesplinter Trogg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=TargetDummy}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Target Dummy})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=TimeRewinder}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Time Rewinder})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=bounce})))))))))))
(root (ClassDef (str{name}{val=TinkersSharpswordOil}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tinker's Sharpsword Oil})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (str{attr}{val=base_attack}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=cards_played}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_battlecry_target}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=x})))) (expr{body} (str{expr$->$(Name)@Name$->$(str{id})}{val=x}))))))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))))))))
(root (ClassDef (str{name}{val=TradePrinceGallywix}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Trade Prince Gallywix})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Not})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasCardName})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gallywix's Coin}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LAST_CARD}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FriendlyPlayer})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Not})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasCardName})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gallywix's Coin}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GallywixsCoin})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))))))))))))))))))
(root (ClassDef (str{name}{val=TreeOfLife}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tree of Life})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=hero}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_max_health}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=TroggzorTheEarthinator}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Troggzor the Earthinator})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BurlyRockjawTrogg})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=UnstablePortal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Unstable Portal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=query}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_minon}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=query})) (str{attr}{val=get_card}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=new_minon})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-3}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_minon})))))))))))
(root (ClassDef (str{name}{val=UpgradedRepairBot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Upgraded Repair Bot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=V07TR0N}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=V-07-TR-0N})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MegaWindfury}))))))))))))))))
(root (ClassDef (str{name}{val=VelensChosen}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Velen's Chosen})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellDamage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))))))
(root (ClassDef (str{name}{val=VitalityTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Vitality Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=WeeSpellstopper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wee Spellstopper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=NoSpellTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent})))))))))))))))))))
(root (ClassDef (str{name}{val=WhirlingBlades}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whirling Blades})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=WhirlingZapomatic}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whirling Zap-o-matic})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=AnubarAmbusher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Anub'ar Ambusher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Bounce})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))
(root (ClassDef (str{name}{val=Avenge}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Avenge})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=dead_minion})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (expr (ListComp (expr{elt} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (comprehension*{generators} (comprehension (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))) (expr*{ifs} (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=dead}))))))))))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=game}))) (str{attr}{val=random_choice}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_died})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_died})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=BaronRivendare}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Baron Rivendare})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DoubleDeathrattle})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))
(root (ClassDef (str{name}{val=DancingSwords}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dancing Swords})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))))
(root (ClassDef (str{name}{val=DarkCultist}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dark Cultist})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))
(root (ClassDef (str{name}{val=Duplicate}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Duplicate})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_died})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_died})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=by})))) (stmt*{body} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=hand}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card}))) (expr{value} (Call (expr{func} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=type})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})) (str{attr}{val=attach}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player})))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal})))))))))))
(root (ClassDef (str{name}{val=EchoingOoze}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Echoing Ooze})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveEffect})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Duplicate})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Feugen}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Feugen})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Thaddius})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=InGraveyard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stalagg}))))))))))))))))))
(root (ClassDef (str{name}{val=Feugen}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Feugen})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Thaddius})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=InGraveyard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stalagg}))))))))))))))))))
(root (ClassDef (str{name}{val=HauntedCreeper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Haunted Creeper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpectralSpider})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=KelThuzad}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kel'Thuzad})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ResurrectFriendly})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Loatheb}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Loatheb})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveAura})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=MadScientist}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mad Scientist})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ApplySecret})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=MY_DECK}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Nerubian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nerubian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Nerubian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nerubian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Nerubian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nerubian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=NerubianEgg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nerubian Egg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Nerubian})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=PoisonSeeds}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Poison Seeds})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.druid}) (alias*{names} (alias (str{name}{val=PoisonSeedsTreant}))) (int{level}{val=0}))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=m})))) (expr{body} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=check_delayed}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PoisonSeedsTreant})))) (str{attr}{val=summon}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=player}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=player}))) (str{attr}{val=minions}))))))))))))))))
(root (ClassDef (str{name}{val=Reincarnate}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Reincarnate})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=check_delayed}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card}))) (str{attr}{val=summon}))) (expr*{args} (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))))))))))))))
(root (ClassDef (str{name}{val=ShadeOfNaxxramas}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shade of Naxxramas})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Slime}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Slime})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=SpectralSpider}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spectral Spider})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Stalagg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stalagg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Thaddius})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=InGraveyard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Feugen}))))))))))))))))))
(root (ClassDef (str{name}{val=Stalagg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stalagg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Thaddius})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=InGraveyard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Feugen}))))))))))))))))))
(root (ClassDef (str{name}{val=StoneskinGargoyle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stoneskin Gargoyle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10000}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Thaddius}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Thaddius})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=11})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=11}))))))))))
(root (ClassDef (str{name}{val=Treant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Treant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=_})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Undertaker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Undertaker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionHasDeathrattle})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=UnstableGhoul}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Unstable Ghoul})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Webspinner}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Webspinner})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=ZombieChow}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Zombie Chow})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))))
(root (ClassDef (str{name}{val=Abomination}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Abomination})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=AbusiveSergeant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Abusive Sergeant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=AcolyteOfPain}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Acolyte of Pain})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=AlAkirTheWindlord}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Al'Akir the Windlord})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=AlarmoBot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Alarm-o-Bot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SwapWithHand})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=AldorPeacekeeper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Aldor Peacekeeper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SetAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=AncestralSpirit}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancestral Spirit})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=deathrattle}))) (str{attr}{val=append}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))
(root (ClassDef (str{name}{val=AncientBrewmaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancient Brewmaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Bounce})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=AncientMage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancient Mage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellDamage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=AncientWatcher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancient Watcher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CantAttack}))))))))))))))))
(root (ClassDef (str{name}{val=AncientOfLore}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancient of Lore})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AncientSecrets})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AncientTeachings})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=AncientOfWar}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ancient of War})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Health})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=AngryChicken}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Angry Chicken})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))
(root (ClassDef (str{name}{val=ArathiWeaponsmith}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arathi Weaponsmith})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Equip})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BattleAxe})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=ArgentCommander}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Argent Commander})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=ArgentProtector}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Argent Protector})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DivineShield})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=ArgentSquire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Argent Squire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Armorsmith}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Armorsmith})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterDamaged})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseArmor})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Ashbringer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ashbringer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=weapon}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (stmt (Return (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=weapon}))))))))))
(root (ClassDef (str{name}{val=AuchenaiSoulpriest}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Auchenai Soulpriest})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HealAsDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))
(root (ClassDef (str{name}{val=AvengingWrath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Avenging Wrath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))
(root (ClassDef (str{name}{val=AzureDrake}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Azure Drake})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=BaneOfDoom}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bane of Doom})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=isinstance})) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion}))))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=divine_shield}))))))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=demons}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=demons})) (str{attr}{val=get_card}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=BaronGeddon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Baron Geddon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=BattleAxe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Battle Axe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=BattleRage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Battle Rage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (FunctionDef (str{name}{val=damaged_character}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=character})))) (stmt*{body} (stmt (Return (expr{value} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=health}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=calculate_max_health})))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=characters}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=characters})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=characters}))) (expr{value} (ListComp (expr{elt} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (comprehension*{generators} (comprehension (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=characters})) (expr*{ifs} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=damaged_character})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=character}))))))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=characters})))))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
(root (ClassDef (str{name}{val=BestialWrath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bestial Wrath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Immune})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer}))))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))
(root (ClassDef (str{name}{val=Betrayal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Betrayal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=left_minion}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None})))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=right_minion}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None})))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=index}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=left_minion}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (BinOp (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (operator{op} (Sub)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=min})) (expr*{args} (expr (BinOp (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (operator{op} (Sub)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=right_minion}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (BinOp (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (operator{op} (Add)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=original_immune}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=immune}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=immune}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=left_minion})) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=left_minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_attack}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target})))))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=right_minion})) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=right_minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_attack}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target})))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=immune}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=original_immune}))))))))))
(root (ClassDef (str{name}{val=BigGameHunter}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Big Game Hunter})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Bite}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bite})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=increase_armor}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})))))))))))
(root (ClassDef (str{name}{val=BlessingOfWisdom}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blessing of Wisdom})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (expr (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=players}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=draw_player}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerOne}))))))) (stmt*{orelse} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=draw_player}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerTwo}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_effect}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=draw_player})))))))))))))))))))
(root (ClassDef (str{name}{val=Blizzard}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blizzard})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))))))))
(root (ClassDef (str{name}{val=BloodFury}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blood Fury})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=BloodImp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blood Imp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=BloodKnight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blood Knight})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasDivineShield})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasDivineShield})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RemoveDivineShields})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasDivineShield})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=BloodmageThalnos}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bloodmage Thalnos})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=BloodsailCorsair}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bloodsail Corsair})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DecreaseDurability})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=BloodsailRaider}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bloodsail Raider})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=base_attack})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=CairneBloodhoof}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cairne Bloodhoof})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BaineBloodhoof})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=CaptainGreenskin}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Captain Greenskin})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseWeaponAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseDurability})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Cenarius}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cenarius})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseStats})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SummonTreants})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TauntTreant})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=CircleOfHealing}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Circle of Healing})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=ColdBlood}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cold Blood})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=cards_played}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))))
(root (ClassDef (str{name}{val=ColdlightOracle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Coldlight Oracle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=ColdlightSeer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Coldlight Seer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=CommandingShout}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Commanding Shout})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=add_aura}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinimumHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Counterspell}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Counterspell})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=index})))) (stmt*{body} (stmt (If (expr{test} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=is_spell}))) (stmt*{body} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=cancel}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=CrazedAlchemist}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Crazed Alchemist})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SwapStats})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=health})) (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=attack})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=CruelTaskmaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cruel Taskmaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=CultMaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cult Master})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=DamagedGolem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Damaged Golem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=DarkIronDwarf}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dark Iron Dwarf})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DeadlyShot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Deadly Shot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_battlecry_target}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=x})))) (expr{body} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=check_delayed})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))))))))
(root (ClassDef (str{name}{val=Deathwing}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Deathwing})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Discard})) (keyword*{keywords} (keyword (str{arg}{val=amount}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12}))))))))))
(root (ClassDef (str{name}{val=DefiasBandit}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Defias Bandit})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=DefiasRingleader}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Defias Ringleader})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=combo}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DefiasBandit})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Demolisher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Demolisher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=Demonfire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Demonfire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (cmpop*{ops} (cmpop (In))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Demonfire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Demonfire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (cmpop*{ops} (cmpop (In))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Devilsaur}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Devilsaur})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=DireWolfAlpha}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dire Wolf Alpha})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent})))))))))))))))))))
(root (ClassDef (str{name}{val=DivineFavor}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Divine Favor})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=difference}))) (expr{value} (BinOp (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hand}))))) (operator{op} (Sub)) (expr{right} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=difference}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
(root (ClassDef (str{name}{val=Doomsayer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Doomsayer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=DreadCorsair}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dread Corsair})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE})))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=attack})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Dream}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dream})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DREAM}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=bounce})))))))))))
(root (ClassDef (str{name}{val=DruidOfTheClaw}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Claw})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CatForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CatDruid})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BearForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BearDruid})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DruidOfTheClaw}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Claw})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CatForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CatDruid})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BearForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BearDruid})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DruidOfTheClaw}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Claw})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CatForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CatDruid})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BearForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BearDruid})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DustDevil}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dust Devil})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=EaglehornBow}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Eaglehorn Bow})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretRevealed})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseDurability})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=EarthenRingFarseer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Earthen Ring Farseer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=EdwinVanCleef}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Edwin VanCleef})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=cards_played})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=cards_played})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=EmeraldDrake}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Emerald Drake})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DREAM}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=EmperorCobra}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Emperor Cobra})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DidDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))))))))))))))))))))
(root (ClassDef (str{name}{val=Equality}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Equality})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=set_health_to}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (BoolOp (boolop{op} (Or)) (expr*{values} (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))))))))))))))
(root (ClassDef (str{name}{val=EtherealArcanist}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ethereal Arcanist})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasSecret})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasSecret})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=Eviscerate}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Eviscerate})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=cards_played}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=ExplosiveShot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Explosive Shot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=index}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (BinOp (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))))) (operator{op} (Sub)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (BinOp (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (operator{op} (Add)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (BinOp (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (operator{op} (Sub)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))
(root (ClassDef (str{name}{val=FacelessManipulator}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Faceless Manipulator})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Replace})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=FaerieDragon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Faerie Dragon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=spell_targetable}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False})))))))))))
(root (ClassDef (str{name}{val=FarSight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Far Sight})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (FunctionDef (str{name}{val=reduce_cost}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-3}))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind_once}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_drawn})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=reduce_cost}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Felguard}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Felguard})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DestroyManaCrystal})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=FenCreeper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fen Creeper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=FeralSpirit}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Feral Spirit})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=spirit_wolf}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=shaman}))) (str{attr}{val=SpiritWolf}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spirit_wolf})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=FinkleEinhorn}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Finkle Einhorn})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=FlameImp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flame Imp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=FlesheatingGhoul}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flesheating Ghoul})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=ForceOfNature}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Force of Nature})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.druid}) (alias*{names} (alias (str{name}{val=ChargeTreant}))) (int{level}{val=0}))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=treant_card}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChargeTreant})))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=treant_card})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=ForkedLightning}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Forked Lightning})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minions})) (str{attr}{val=remove}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))))))
(root (ClassDef (str{name}{val=FreezingTrap}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Freezing Trap})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=isinstance})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion}))))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=removed})))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=bounce}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=card}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))))))
(root (ClassDef (str{name}{val=FrostElemental}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frost Elemental})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=FrothingBerserker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frothing Berserker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterDamaged})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=GadgetzanAuctioneer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gadgetzan Auctioneer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=GladiatorsLongbow}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gladiator's Longbow})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsHero})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Immune})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackCompleted}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=GrommashHellscream}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Grommash Hellscream})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))
(root (ClassDef (str{name}{val=Gruul}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gruul})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=HarrisonJones}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Harrison Jones})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=durability})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Destroy})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=HarvestGolem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Harvest Golem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DamagedGolem})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Headcrack}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Headcrack})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=cards_played}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=add_effect}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=HeavyAxe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Heavy Axe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Hogger}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hogger})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Gnoll})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=HolyFire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Holy Fire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=HungryCrab}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hungry Crab})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Hyena}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hyena})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=IceBarrier}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ice Barrier})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=hero}))))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=removed})))))))) (stmt*{body} (stmt (AugAssign (expr{target} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=player}))) (str{attr}{val=game}))) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=armor}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=8})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=IceBlock}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ice Block})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=amount})))) (stmt*{body} (stmt (If (expr{test} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=is_hero}))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (BinOp (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=health}))) (operator{op} (Sub)) (expr{right} (str{expr$->$(Name)@Name$->$(str{id})}{val=amount})))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Immune})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer}))))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal})))))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=pre_damage})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=pre_damage})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=IceLance}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ice Lance})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=frozen}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))))))))
(root (ClassDef (str{name}{val=IllidanStormrage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Illidan Stormrage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameOfAzzinoth})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Imp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Imp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=ImpMaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Imp Master})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Imp})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=InnerFire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Inner Fire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=delta}))) (expr{value} (BinOp (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health}))) (operator{op} (Sub)) (expr{right} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_attack}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=delta})))))))))))
(root (ClassDef (str{name}{val=InnerRage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Inner Rage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))
(root (ClassDef (str{name}{val=IronbeakOwl}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ironbeak Owl})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Silence})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=JunglePanther}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Jungle Panther})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=KeeperOfTheGrove}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Keeper of the Grove})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Moonfire})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Dispel})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Silence})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Kidnapper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kidnapper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=combo}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Bounce})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))) (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=KingKrush}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=King Krush})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=KingMukla}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=King Mukla})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Bananas})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=LaughingSister}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Laughing Sister})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DREAM}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=spell_targetable}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False})))))))))))
(root (ClassDef (str{name}{val=LavaBurst}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lava Burst})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target})))) (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=LayOnHands}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lay on Hands})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=LeeroyJenkins}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Leeroy Jenkins})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Whelp})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=LeperGnome}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Leper Gnome})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))))
(root (ClassDef (str{name}{val=LightningBolt}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lightning Bolt})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target})))) (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=LightningStorm}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lightning Storm})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_amount}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Lightspawn}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lightspawn})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackEqualsHealth}))))))))))))))))
(root (ClassDef (str{name}{val=LootHoarder}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Loot Hoarder})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=LordJaraxxus}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lord Jaraxxus})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ReplaceHeroWithMinion})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Jaraxxus})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Remove})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Equip})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BloodFury})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=15}))))))))))
(root (ClassDef (str{name}{val=LordJaraxxus}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lord Jaraxxus})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ReplaceHeroWithMinion})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Jaraxxus})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Remove})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Equip})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BloodFury})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=15}))))))))))
(root (ClassDef (str{name}{val=LorewalkerCho}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lorewalker Cho})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LAST_CARD}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OtherPlayer}))))))))))))))))))))))
(root (ClassDef (str{name}{val=MadBomber}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mad Bomber})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Malygos}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Malygos})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=5})))))))))))
(root (ClassDef (str{name}{val=ManaAddict}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mana Addict})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=ManaTideTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mana Tide Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=MarkOfNature}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mark of Nature})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (ClassDef (str{name}{val=MarkOfNatureAttack}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mark of Nature +4 Attack})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})))))))))) (stmt (ClassDef (str{name}{val=MarkOfNatureHealth}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mark of Nature +4 Health})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=taunt}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MarkOfNatureAttack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MarkOfNatureHealth})))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=option})) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))
(root (ClassDef (str{name}{val=MassDispel}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mass Dispel})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=silence}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=MasterSwordsmith}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Master Swordsmith})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=MasterOfDisguise}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Master of Disguise})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stealth})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=MillhouseManastorm}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Millhouse Manastorm})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveAura})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-100}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=MindControlTech}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mind Control Tech})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Steal})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OpponentMinionCountIsGreaterThan})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Mindgames}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mindgames})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_draw}))) (expr*{args} (expr (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=deck}))) (str{attr}{val=cards}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=c})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (str{attr}{val=drawn}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=isinstance})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))))))))))))))) (stmt (If (expr{test} (UnaryOp (unaryop{op} (Not)) (expr{operand} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ShadowOfNothing}))))))) (stmt*{orelse} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card})))))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card})) (str{attr}{val=drawn}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion_card})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=MirrorEntity}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mirror Entity})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=mirror}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=mirror})) (str{attr}{val=add_to_board}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=player}))) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_summoned})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=mirror}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=player}))) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=after_added})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=mirror}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))
(root (ClassDef (str{name}{val=MoltenGiant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Molten Giant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=20})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=damage})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=MortalStrike}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mortal Strike})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=MountainGiant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mountain Giant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=MurlocTidecaller}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Murloc Tidecaller})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=MurlocWarleader}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Murloc Warleader})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))))))))))))
(root (ClassDef (str{name}{val=NatPagle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nat Pagle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OneIn})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))))))))))))
(root (ClassDef (str{name}{val=Naturalize}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Naturalize})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=draw}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Nightmare}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nightmare})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DREAM}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_effect}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CurrentPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=Nozdormu}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nozdormu})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=Onyxia}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Onyxia})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Whelp})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=Panther}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Panther})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=_})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))))))))))
(root (ClassDef (str{name}{val=PatientAssassin}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Patient Assassin})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DidDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))))))))))))))))))))
(root (ClassDef (str{name}{val=PerditionsBlade}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Perdition's Blade})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker})))))))))))) (keyword (str{arg}{val=combo}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=PintSizedSummoner}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Pint-Sized Summoner})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveAura})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionPlaced}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=PitLord}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Pit Lord})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=PowerOverwhelming}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Power Overwhelming})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_effect}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})))))))))))
(root (ClassDef (str{name}{val=PriestessOfElune}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Priestess of Elune})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=ProphetVelen}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Prophet Velen})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MultiplySpellDamage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MultiplyHealAmount})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=Pyroblast}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Pyroblast})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=QuestingAdventurer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Questing Adventurer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=RagingWorgen}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Raging Worgen})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Windfury})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=RagnarosTheFirelord}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ragnaros the Firelord})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})))))))))))))))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CantAttack}))))))))))))))))
(root (ClassDef (str{name}{val=Rampage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Rampage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (NotEq))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_max_health}))))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))
(root (ClassDef (str{name}{val=RavenholdtAssassin}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ravenholdt Assassin})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=SI7Agent}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=SI:7 Agent})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=combo}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Savagery}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Savagery})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=calculate_attack}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=SavannahHighmane}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Savannah Highmane})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Hyena})))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=ScarletCrusader}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Scarlet Crusader})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=ScavengingHyena}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Scavenging Hyena})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=SeaGiant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sea Giant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=Secretkeeper}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Secretkeeper})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSecret})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=SenseDemons}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sense Demons})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_draw}))) (expr*{args} (expr (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=deck}))) (str{attr}{val=cards}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=c})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (str{attr}{val=drawn}))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (str{attr}{val=is_minion}))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))))))))) (stmt (If (expr{test} (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card})) (stmt*{body} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card})) (str{attr}{val=drawn}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=deck}))) (str{attr}{val=left}))) (operator{op} (Sub)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_drawn})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_destroyed})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=demon_card})))))))) (stmt*{orelse} (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=warlock}))) (str{attr}{val=WorthlessImp}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_drawn})) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=warlock}))) (str{attr}{val=WorthlessImp})))))))))))))))))))))
(root (ClassDef (str{name}{val=Shadowflame}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadowflame})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=shadowflame_damage}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=calculate_attack}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=shadowflame_damage}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Shadowform}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadowform})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=type})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=powers}))) (str{attr}{val=MindShatter}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=type})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=powers}))) (str{attr}{val=MindSpike})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=powers}))) (str{attr}{val=MindSpike}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))) (str{attr}{val=hero}))) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero})))))) (stmt*{orelse} (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=type})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))))) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=powers}))) (str{attr}{val=MindSpike}))))) (stmt*{body} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=powers}))) (str{attr}{val=MindShatter}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=power}))) (str{attr}{val=hero}))) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero})))))))))))))))))
(root (ClassDef (str{name}{val=Shadowstep}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadowstep})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_friendly_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=bounce}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-3})))))))))))))))
(root (ClassDef (str{name}{val=ShieldSlam}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shield Slam})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=armor}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Shieldbearer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shieldbearer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Silence}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Silence})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=silence})))))))))))
(root (ClassDef (str{name}{val=SilverHandKnight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Silver Hand Knight})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Squire})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=SilvermoonGuardian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Silvermoon Guardian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Snake}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Snake})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=SnakeTrap}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Snake Trap})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (If (expr{test} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=isinstance})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=snake}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=hunter}))) (str{attr}{val=Snake}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=player}))) (str{attr}{val=game}))) (str{attr}{val=other_player}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=snake})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))))))
(root (ClassDef (str{name}{val=Snipe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Snipe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal})))))))))))
(root (ClassDef (str{name}{val=SorcerersApprentice}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sorcerer's Apprentice})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))))))))))))))))))
(root (ClassDef (str{name}{val=SoulOfTheForest}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Soul of the Forest})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.druid}) (alias*{names} (alias (str{name}{val=Treant}))) (int{level}{val=0}))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=deathrattle}))) (str{attr}{val=append}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Treant})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))
(root (ClassDef (str{name}{val=SouthseaCaptain}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Southsea Captain})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE})))))))))))))))))))))
(root (ClassDef (str{name}{val=SouthseaDeckhand}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Southsea Deckhand})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=PIRATE}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Charge})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))))))))))))))
(root (ClassDef (str{name}{val=Spellbender}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spellbender})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=index})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=is_spell}))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=target}))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=target}))) (str{attr}{val=is_minion})))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellbenderMinion})))) (str{attr}{val=summon}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions})))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=target}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))
(root (ClassDef (str{name}{val=SpiritWolf}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spirit Wolf})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=SpitefulSmith}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spiteful Smith})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})))))))))))))))))
(root (ClassDef (str{name}{val=Squire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Squire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Squirrel}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Squirrel})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=StampedingKodo}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stampeding Kodo})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackLessThanOrEqualTo})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=Starfall}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Starfall})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DamageAll})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DamageOne})))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=option})) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))
(root (ClassDef (str{name}{val=StormforgedAxe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stormforged Axe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=StranglethornTiger}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stranglethorn Tiger})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Sunwalker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sunwalker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=SwordOfJustice}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sword of Justice})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSummoned})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DecreaseDurability})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=SylvanasWindrunner}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sylvanas Windrunner})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Steal})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))
(root (ClassDef (str{name}{val=TaurenWarrior}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tauren Warrior})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))
(root (ClassDef (str{name}{val=TempleEnforcer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Temple Enforcer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=TheBeast}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=The Beast})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FinkleEinhorn})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))))
(root (ClassDef (str{name}{val=TheBlackKnight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=The Black Knight})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasStatus})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=taunt}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=Thoughtsteal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Thoughtsteal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_draw}))) (expr*{args} (expr (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=deck}))) (str{attr}{val=cards}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=c})))) (expr{body} (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=c})) (str{attr}{val=drawn})))))))))))) (stmt (If (expr{test} (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})) (str{attr}{val=drawn}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_drawn})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_destroyed})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=new_card})))))))))))))))))))
(root (ClassDef (str{name}{val=TirionFordring}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tirion Fordring})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Equip})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Ashbringer})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Treant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Treant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=_})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Treant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Treant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=_})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Treant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Treant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=_})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=TwilightDrake}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Twilight Drake})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=TwistingNether}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Twisting Nether})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=UnboundElemental}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Unbound Elemental})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasOverload})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasOverload})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=UnleashTheHounds}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Unleash the Hounds})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=x})))) (expr{body} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=hound}))) (expr{value} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=minions}))) (str{attr}{val=hunter}))) (str{attr}{val=Hound}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hound})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=VentureCoMercenary}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Venture Co. Mercenary})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))))))))))))
(root (ClassDef (str{name}{val=VioletApprentice}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Violet Apprentice})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=VioletTeacher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Violet Teacher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=VioletApprentice})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=VoidTerror}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Void Terror})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=health})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=attack})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent})))))))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent})))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Whelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Whelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=WildPyromancer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wild Pyromancer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardUsed})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))) (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=WindfuryHarpy}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Windfury Harpy})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=WorthlessImp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Worthless Imp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Wrath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wrath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (ClassDef (str{name}{val=WrathOne}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wrath 1 Damage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=wrath}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))))))))) (stmt (ClassDef (str{name}{val=WrathThree}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wrath 3 Damage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=wrath})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WrathOne})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WrathThree})))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=wrath}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=option})) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))
(root (ClassDef (str{name}{val=YoungDragonhawk}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Young Dragonhawk})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=YoungPriestess}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Young Priestess})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=YouthfulBrewmaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Youthful Brewmaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Bounce})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=Ysera}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ysera})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=dream_card_list}))) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EmeraldDrake})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=LaughingSister})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Nightmare})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=YseraAwakens})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Dream})))))))) (stmt (Return (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=dream_card_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))))))))
(root (ClassDef (str{name}{val=YseraAwakens}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ysera Awakens})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DREAM}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=hero}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=filter})) (expr*{args} (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=m})))) (expr{body} (BoolOp (boolop{op} (Or)) (expr*{values} (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=m})) (str{attr}{val=is_minion}))))) (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=m})) (str{attr}{val=card}))) (str{attr}{val=name}))) (cmpop*{ops} (cmpop (NotEq))) (expr*{comparators} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ysera})))))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=AxeFlinger}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Axe Flinger})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))))))))
(root (ClassDef (str{name}{val=BlackwingTechnician}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blackwing Technician})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Chromaggus}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Chromaggus})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardDrawn})))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LAST_DRAWN})))) (keyword (str{arg}{val=make_copy}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=CoreRager}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Core Rager})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Not})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DarkIronSkulker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dark Iron Skulker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Not})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsDamaged}))))))) (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Demonwrath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Demonwrath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))) (str{attr}{val=minion_type}))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))))
(root (ClassDef (str{name}{val=DragonConsort}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dragon Consort})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveAura})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=DragonEgg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dragon Egg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BlackWhelp})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=DragonsBreath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dragon's Breath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target})))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DeadMinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=DruidOfTheFlame}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Flame})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameCatForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameCat})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameBirdForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameBird})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=DruidOfTheFlame}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Flame})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameCatForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameCat})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameBirdForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameBird})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=DruidOfTheFlame}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Druid of the Flame})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameCatForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameCat})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameBirdForm})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=FlameBird})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=EmperorThaurissan}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Emperor Thaurissan})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=FireguardDestroyer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fireguard Destroyer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomAmount})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=Flamewaker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flamewaker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardUsed})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=GangUp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gang Up})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=put_back}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=type})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=card})))))))))))))))))
(root (ClassDef (str{name}{val=GrimPatron}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Grim Patron})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GrimPatron})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=health})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))))))))))))))))))
(root (ClassDef (str{name}{val=ImpGangBoss}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Imp Gang Boss})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damaged})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Imp})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=LavaShock}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lava Shock})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=upcoming_overload}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (operator{op} (Add)) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=current_overload}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=current_overload}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))
(root (ClassDef (str{name}{val=MajordomoExecutus}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Majordomo Executus})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Ragnaros})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})))))))))))))))))
(root (ClassDef (str{name}{val=Nefarian}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nefarian})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsClass})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_class})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=QuickShot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Quick Shot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
(root (ClassDef (str{name}{val=RendBlackhand}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Rend Blackhand})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionIsNotTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsRarity})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Resurrect}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Resurrect})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.engine}) (alias*{names} (alias (str{name}{val=card_lookup}))) (int{level}{val=0}))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=graveyard}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card_name}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=graveyard}))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=card_lookup})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card_name}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))))))))))))
(root (ClassDef (str{name}{val=Revenge}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Revenge})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=12}))))) (stmt*{body} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))) (stmt*{orelse} (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))))
(root (ClassDef (str{name}{val=VolcanicDrake}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Volcanic Drake})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DeadMinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=VolcanicLumberer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Volcanic Lumberer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DeadMinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Whelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Whelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Whelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
