class #MERGE# #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 ,
class #MERGE# #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Minion ( ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Minion #MERGE# Selector ( players =
class Whelp ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Minion #MERGE# Selector ( ) ) ) ] )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player , game ) : #NEWLINE# #INDENT#
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self , player ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( self , self ) :
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT#
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 ,
class #MERGE# #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Minion ( ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 1
class #MERGE# #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Minion ( ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( )
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player , game ) : #NEWLINE# #INDENT# #INDENT# return Minion (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE#
class #MERGE# ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ,
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE#
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) )
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Minion #MERGE# Selector ( ) ) ) ] )
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Minion
class #MERGE# ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Weapon ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ,
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Minion #MERGE# Selector ( players =
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player , game ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 ,
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# #INDENT# ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self ) : #NEWLINE# #INDENT# #INDENT# self . player . minions : #NEWLINE# #INDENT# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 , taunt = True )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player ) : #NEWLINE# #INDENT#
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE#
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player , game ) : #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self ) : #NEWLINE# #INDENT# #INDENT#
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player , game ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , self , player , game ) : #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self ) : #NEWLINE# #INDENT# #INDENT#
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) :
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self , player
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack (
class #MERGE# #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 ,
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , self )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 ,
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack (
class #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Minion #MERGE# Selector ( ) ) ) ] )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Picker ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game
