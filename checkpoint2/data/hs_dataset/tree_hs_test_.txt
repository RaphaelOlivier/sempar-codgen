(root (ClassDef (str{name}{val=Archmage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Archmage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=BootyBayBodyguard}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Booty Bay Bodyguard})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=DarkscaleHealer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Darkscale Healer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=FieryWarAxe}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fiery War Axe})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=FrostwolfWarlord}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Frostwolf Warlord})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=Hellfire}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hellfire})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=hero}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Innervate}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Innervate})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))) (stmt*{body} (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{orelse} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=10})))))))))))))
(root (ClassDef (str{name}{val=MagmaRager}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Magma Rager})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=MortalCoil}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mortal Coil})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=divine_shield})))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Polymorph}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Polymorph})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.mage}) (alias*{names} (alias (str{name}{val=Sheep}))) (int{level}{val=0}))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=sheep}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Sheep})))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=sheep})) (str{attr}{val=create_minion}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=sheep})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=replace}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))))))))))
(root (ClassDef (str{name}{val=SearingTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Searing Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=SilverbackPatriarch}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Silverback Patriarch})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=StormwindKnight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Stormwind Knight})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=VoodooDoctor}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Voodoo Doctor})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=WrathOfAirTotem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wrath of Air Totem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=TOTEM})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=AstralCommunion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Astral Communion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=unattach}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=trigger}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_discarded})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card})))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (expr{value} (List (epsilon))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=max_mana}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=10})))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))))))))
(root (ClassDef (str{name}{val=AnnoyoTron}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Annoy-o-Tron})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=divine_shield}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=BurlyRockjawTrogg}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Burly Rockjaw Trogg})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=CogmastersWrench}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cogmaster's Wrench})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0})))))))))))))))))))
(root (ClassDef (str{name}{val=EchoOfMedivh}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Echo of Medivh})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=sorted})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (keyword*{keywords} (keyword (str{arg}{val=key}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))) (expr{body} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=born}))))))))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))))))))))))))))
(root (ClassDef (str{name}{val=FloatingWatcher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Floating Watcher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterDamaged})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsHero})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=OwnersTurn}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=GnomishExperimenter}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gnomish Experimenter})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GnomishChicken})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=LastDrawnSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Matches})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=LastDrawnSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=IronJuggernaut}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Iron Juggernaut})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BurrowingMine})))) (keyword*{keywords} (keyword (str{arg}{val=add_to_deck}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=MadderBomber}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Madder Bomber})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=MiniMage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mini-Mage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=spell_damage}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=PilotedSkyGolem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Piloted Sky Golem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaCost})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=ScarletPurifier}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Scarlet Purifier})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionHasDeathrattle})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=SiltfinSpiritwalker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Siltfin Spiritwalker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC})))) (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionDied})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MURLOC}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=TinkertownTechnician}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.spells.neutral}) (alias*{names} (alias (str{name}{val=spare_part_list}))) (int{level}{val=0}))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tinkertown Technician})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Tuple (expr*{elts} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spare_part_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Voljin}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Vol'jin})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SwapStats})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=health})) (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=health})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=DeathsBite}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Death's Bite})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))))))))))))))))
(root (ClassDef (str{name}{val=Maexxna}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Maexxna})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DidDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))))))))))))))))))))
(root (ClassDef (str{name}{val=SludgeBelcher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sludge Belcher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Slime})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Voidcaller}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Voidcaller})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))) (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=MY_HAND}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Alexstrasza}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Alexstrasza})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SetHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=15}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))))))))
(root (ClassDef (str{name}{val=ArcaneGolem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Arcane Golem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveManaCrystal})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=BaineBloodhoof}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Baine Bloodhoof})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=BladeFlurry}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blade Flurry})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attack_power}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=calculate_attack}))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (str{attr}{val=destroy}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attack_power})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attack_power})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))
(root (ClassDef (str{name}{val=Brawl}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Brawl})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (BinOp (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (operator{op} (Add)) (expr{right} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=minions}))))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minions})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt (If (expr{test} (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=survivor}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minions}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=minions})) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=survivor}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))))))))
(root (ClassDef (str{name}{val=Conceal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Conceal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (stmt*{body} (stmt (If (expr{test} (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=stealth}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stealth})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted}))))))))))))))))))))
(root (ClassDef (str{name}{val=DefenderMinion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Defender})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Doomguard}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Doomguard})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Discard})) (keyword*{keywords} (keyword (str{arg}{val=amount}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=EarthElemental}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Earth Elemental})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=ExplosiveTrap}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Explosive Trap})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (If (expr{test} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=isinstance})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=Hero}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=player}))) (str{attr}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=enemies}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=enemies})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=hero}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=enemy})) (expr{iter} (str{expr$->$(Name)@Name$->$(str{id})}{val=enemies})) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=enemy})) (str{attr}{val=damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=check_delayed}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))))))
(root (ClassDef (str{name}{val=FlameOfAzzinoth}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flame of Azzinoth})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Gnoll}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gnoll})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=HolyWrath}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Holy Wrath})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=fatigue}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False})))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=deck}))) (str{attr}{val=left}))) (cmpop*{ops} (cmpop (Eq))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=fatigue}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))) (stmt (If (expr{test} (UnaryOp (unaryop{op} (Not)) (expr{operand} (str{expr$->$(Name)@Name$->$(str{id})}{val=fatigue})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=cost}))) (expr{value} (Attribute (expr{value} (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hand}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))) (str{attr}{val=mana}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=cost}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))))))
(root (ClassDef (str{name}{val=Infernal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Infernal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=KirinTorMage}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Kirin Tor Mage})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GiveAura})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-100}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSecret})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardPlayed})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSecret}))))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Lightwarden}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lightwarden})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterHealed})) (keyword*{keywords} (keyword (str{arg}{val=player}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=ManaWraith}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mana Wraith})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion}))))))))))))))))))))
(root (ClassDef (str{name}{val=Misdirection}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Misdirection})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=isinstance})) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=Hero}))))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=removed})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=player}))) (str{attr}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=possibilities}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=possibilities})) (str{attr}{val=extend}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=possibilities})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=current_player}))) (str{attr}{val=hero}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=possibilities})) (str{attr}{val=append}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=possibilities})) (str{attr}{val=remove}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=current_target}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=current_target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=possibilities}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))))))
(root (ClassDef (str{name}{val=NobleSacrifice}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Noble Sacrifice})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=player}))) (str{attr}{val=game}))) (str{attr}{val=other_player}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=removed})))))))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.minions.paladin}) (alias*{names} (alias (str{name}{val=DefenderMinion}))) (int{level}{val=0}))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=defender}))) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DefenderMinion})))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=defender})) (str{attr}{val=summon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions})))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=current_target}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=PowerOfTheWild}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Power of the Wild})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=LeaderOfThePack})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SummonPanther})))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=option})) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))
(root (ClassDef (str{name}{val=Redemption}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Redemption})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=by})))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=resurrection}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=card}))) (str{attr}{val=summon}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=player}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=min})) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=index}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=player}))) (str{attr}{val=minions}))))))))))))) (stmt (If (expr{test} (str{expr$->$(Name)@Name$->$(str{id})}{val=resurrection})) (stmt*{body} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=resurrection})) (str{attr}{val=health}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_died})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_died})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=ShadowMadness}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadow Madness})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_enemy_minion_spell_target})))) (keyword (str{arg}{val=filter_func}) (expr{value} (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (expr{body} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=calculate_attack}))) (cmpop*{ops} (cmpop (LtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=spell_targetable})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=copy}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=active}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=exhausted}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=remove_from_board}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_to_board}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Stolen})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))))))))
(root (ClassDef (str{name}{val=SiphonSoul}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Siphon Soul})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=heal}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_heal_power}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Spellbender}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spellbender})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=index})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=is_spell}))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=target}))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=target}))) (str{attr}{val=is_minion})))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellbenderMinion})))) (str{attr}{val=summon}))) (expr*{args} (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=game}))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions})))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=card})) (str{attr}{val=target}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=card_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))
(root (ClassDef (str{name}{val=SummoningPortal}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Summoning Portal})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=minimum}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))))))))))))
(root (ClassDef (str{name}{val=ThrallmarFarseer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Thrallmar Farseer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Upgrade}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Upgrade!})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.weapons.warrior}) (alias*{names} (alias (str{name}{val=HeavyAxe}))) (int{level}{val=0}))) (stmt (If (expr{test} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (stmt*{body} (stmt (AugAssign (expr{target} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (str{attr}{val=durability}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (str{attr}{val=base_attack}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (stmt*{orelse} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=heavy_axe}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeavyAxe})))) (str{attr}{val=create_weapon}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=heavy_axe})) (str{attr}{val=equip}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))))))))))
(root (ClassDef (str{name}{val=Wisp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wisp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=BlackWhelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Black Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=DragonkinSorcerer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Dragonkin Sorcerer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellTargeted})))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=HungryDragon}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hungry Dragon})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaCost})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=SolemnVigil}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Solemn Vigil})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DeadMinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))))))))) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1})))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=n})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))))
