class ArchmageArchmage(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Archmage Archmage', 6, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 7)
class BootyBayBodyguard(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Booty Bay Bay', 5, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(5, 4)
class DarkscaleHealerHealer(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Darkscale Darkscale', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 5)
class FieryWar(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Fiery War', 3, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(3), self)
class FrostwolfWarlordWarlord(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Frostwolf Frostwolf', 5, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 4)
class HellfireHellfire(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Hellfire Hellfire', 4, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(3), self)
class InnervateInnervate(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Innervate Innervate', 0, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(2), self)
class MagmaRager(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Magma Magma', 3, CHARACTER_CLASS.ALL, CARD_RARITY#NEWLINE#            .COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(5, 1)
class MortalCoil(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Mortal Mortal', 1, CHARACTER_CLASS.ROGUE,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(1), self)
class PolymorphPolymorph(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Polymorph Polymorph', 4, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(4), self)
class SearingTotem(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Searing Searing', 1, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(1, 1)
class SilverbackPatriarchPatriarch(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Silverback Silverback', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(1, 4)
class StormwindKnight(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Stormwind Stormwind', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 5)
class VoodooDoctor(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Voodoo Voodoo', 2, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 1)
class WrathAirTotem(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Wrath of Air', 1, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(0, 2)
class AstralCommunion(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Astral Astral', 4, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(10), self)
class Annoy-o-TronAnnoy-o-Tron(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Annoy-o-Tron Annoy-o-Tron', 1, CHARACTER_CLASS.#NEWLINE#            ALL, CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(1, 2)
class BurlyRockjawTrogg(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Burly Rockjaw', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(3, 5)
class CogmasterWrenchWrench(WeaponCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Cogmaster Wrench', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_weapon(self, player):#NEWLINE#        return Weapon(1, 3)
class EchoofMedivh(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Echo Echo', 4, CHARACTER_CLASS.ROGUE, CARD_RARITY#NEWLINE#            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(4), self)
class FloatingWatcher(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Floating Floating', 5, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 4)
class GnomishExperimenterExperimenter(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Gnomish Gnomish', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(3, 2)
class IronJuggernaut(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Iron Iron Juggernaut', 6, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(6, 5)
class MadderBomber(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Madder Madder', 5, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(5, 4)
class Mini-MageMini-Mage(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Mini-Mage Mini-Mage', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 1)
class PilotedSkyGolem(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Piloted Sky', 6, CHARACTER_CLASS.ALL, CARD_RARITY#NEWLINE#            .COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(6, 4)
class ScarletPurifierPurifier(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Scarlet Scarlet', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 3)
class SiltfinSpiritwalker(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Siltfin Siltfin', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 5)
class TinkertownTechnician(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Tinkertown Tinkertown', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(3, 3)
class Vol'jinVol'jin(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__("Vol'jin Vol'jin", 5, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(6, 2)
class DeathBite(WeaponCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Death Bite', 2, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(1), self)
class MaexxnaMaexxna(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Maexxna Maexxna', 6, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 8)
class SludgeBelcherBelcher(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Sludge Sludge', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(3, 5)
class VoidcallerVoidcaller(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Voidcaller Voidcaller', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(3, 4)
class AlexstraszaAlexstrasza(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Alexstrasza Alexstrasza', 9, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(8, 8)
class ArcaneGolem(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Arcane Golem', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 2)
class BaineBloodhoof(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Baine Baine', 4, CHARACTER_CLASS.ALL, CARD_RARITY#NEWLINE#            .COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 5)
class BladeFlurry(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Blade Blade', 2, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(2), self)
class BrawlBrawl(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Brawl Brawl', 5, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(5), self)
class ConcealConceal(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Conceal Conceal', 1, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(1), self)
class DefenderDefender(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Defender Defender', 2, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 1)
class DoomguardDoomguard(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Doomguard Doomguard', 5, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(5, 7)
class EarthElemental(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Earth Earth', 5, CHARACTER_CLASS.ALL, CARD_RARITY#NEWLINE#            .COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(7, 8)
class ExplosiveTrap(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Explosive Trap', 2, CHARACTER_CLASS.ROGUE,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player, game)
class FlameFlameAzzinoth(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Flame Flame Azzinoth', 2, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 1)
class GnollGnoll(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Gnoll Gnoll', 2, CHARACTER_CLASS.ALL, CARD_RARITY#NEWLINE#            .COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 2)
class HolyWrath(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Holy Wrath', 5, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(5), self)
class InfernalInfernal(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Infernal Infernal', 6, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(6, 6)
class KirinTorMage(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Kirin Tor', 4, CHARACTER_CLASS.ALL, CARD_RARITY.#NEWLINE#            COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(4, 3)
class LightwardenLightwarden(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Lightwarden Lightwarden', 1, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(1, 2)
class ManaWraithWraith(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Mana Mana Wraith', 2, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 2)
class MisdirectionMisdirection(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Misdirection Misdirection', 2, CHARACTER_CLASS.#NEWLINE#            PALADIN, CARD_RARITY.COMMON, target_func=hearthbreaker.#NEWLINE#            targeting.find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(2), self)
class NobleSacrificeSacrifice(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Noble Noble', 1, CHARACTER_CLASS.ROGUE,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player, game)
class PowertheWild(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Power Power', 2, CHARACTER_CLASS.ROGUE,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player, game)
class RedemptionRedemption(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Redemption Redemption', 1, CHARACTER_CLASS.#NEWLINE#            PALADIN, CARD_RARITY.COMMON, target_func=hearthbreaker.#NEWLINE#            targeting.find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player, game)
class ShadowMadness(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Shadow Madness', 4, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(3), self)
class SiphonSoul(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Siphon Siphon', 6, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(3), self)
class SpellbenderSpellbender(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Spellbender Spellbender', 3, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(1, 3)
class SummoningPortal(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Summoning Portal', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(0, 4)
class ThrallmarFarseer(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Thrallmar Thrallmar', 2, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 3)
class Upgrade!(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Upgrade Upgrade', 1, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player, game)
class WispWisp(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Wisp Wisp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.#NEWLINE#            COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(1, 1)
class BlackWhelp(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Black Black', 2, CHARACTER_CLASS.ALL, CARD_RARITY#NEWLINE#            .COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(2, 1)
class DragonkinSorcererSorcerer(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Dragonkin Dragonkin', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(3, 5)
class HungryDragon(MinionCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Hungry Dragon', 4, CHARACTER_CLASS.ALL,#NEWLINE#            CARD_RARITY.COMMON)#NEWLINE##NEWLINE#    def create_minion(self, player):#NEWLINE#        return Minion(5, 6)
class SolemnVigil(SpellCard):#NEWLINE##NEWLINE#    def __init__(self):#NEWLINE#        super().__init__('Solemn Solemn', 5, CHARACTER_CLASS.PALADIN,#NEWLINE#            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.#NEWLINE#            find_spell_target)#NEWLINE##NEWLINE#    def use(self, player, game):#NEWLINE#        super().use(player, game)#NEWLINE#        self.target.damage(player.effective_spell_damage(2), self)
