(root (ClassDef (str{name}{val=AssassinsBlade}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Assassin's Blade})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=BoulderfistOgre}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Boulderfist Ogre})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=DeadlyPoison}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Deadly Poison})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (str{attr}{val=base_attack}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=weapon}))) (cmpop*{ops} (cmpop (IsNot))) (expr*{comparators} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))))))))
(root (ClassDef (str{name}{val=FireElemental}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Fire Elemental})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=GnomishInventor}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gnomish Inventor})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=HeroicStrike}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Heroic Strike})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=hero}))) (str{attr}{val=change_temp_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})))))))))))
(root (ClassDef (str{name}{val=IronbarkProtector}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Ironbark Protector})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=MarkOfTheWild}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mark of the Wild})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=taunt}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))))))))))
(root (ClassDef (str{name}{val=MultiShot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Multi-Shot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=copy})) (str{attr}{val=copy}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=i})) (expr{iter} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=range})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_choice}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=targets}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=targets})) (str{attr}{val=remove}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))))))) (stmt (FunctionDef (str{name}{val=can_use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Return (expr{value} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Call (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=can_use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (expr (Compare (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=minions}))))) (cmpop*{ops} (cmpop (GtE))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))))))
(root (ClassDef (str{name}{val=PowerWordShield}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Power Word: Shield})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=SenjinShieldmasta}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sen'jin Shieldmasta})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=SinisterStrike}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sinister Strike})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=Succubus}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Succubus})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=FREE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Discard})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=WarGolem}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=War Golem})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=Acidmaw}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Acidmaw})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterDamaged})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionIsNotTarget})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Kill})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetSelector})))))))))))))))))))))
(root (ClassDef (str{name}{val=Boar}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Boar})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=AnodizedRoboCub}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Anodized Robo Cub})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=choices}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackMode})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Choice})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TankMode})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=BurrowingMine}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Burrowing Mine})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Drawn})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=10}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Drawn})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Discard})) (keyword*{keywords} (keyword (str{arg}{val=query}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LAST_DRAWN}))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Drawn})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))))))))
(root (ClassDef (str{name}{val=Crackle}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Crackle})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_spell_target})))) (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=random_amount}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=EmergencyCoolant}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Emergency Coolant})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))))))
(root (ClassDef (str{name}{val=FlyingMachine}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flying Machine})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=windfury}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=GoblinAutoBarber}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Goblin Auto-Barber})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseWeaponAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))
(root (ClassDef (str{name}{val=IronSensei}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Iron Sensei})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnEnded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=MalGanis}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mal'Ganis})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=9})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON})))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Immune})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))
(root (ClassDef (str{name}{val=MistressOfPain}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mistress of Pain})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARLOCK}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DidDamage})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EventValue})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Powermace}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Powermace})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))
(root (ClassDef (str{name}{val=ScrewjankClunker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Screwjank Clunker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))) (keyword*{keywords} (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=SneedsOldShredder}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sneed's Old Shredder})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsRarity})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))
(root (ClassDef (str{name}{val=Toshley}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.spells.neutral}) (alias*{names} (alias (str{name}{val=spare_part_list}))) (int{level}{val=0}))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Toshley})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spare_part_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (stmt (ImportFrom (str{module}{val=hearthbreaker.cards.spells.neutral}) (alias*{names} (alias (str{name}{val=spare_part_list}))) (int{level}{val=0}))) (stmt (Return (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=spare_part_list})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})))))))))))))))))))
(root (ClassDef (str{name}{val=Warbot}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Warbot})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=MECH}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))
(root (ClassDef (str{name}{val=Deathlord}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Deathlord})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True}))) (keyword (str{arg}{val=deathrattle}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Deathrattle})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Summon})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=conditions}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsMinion})))))) (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=MY_DECK}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))))))))))))
(root (ClassDef (str{name}{val=NerubarWeblord}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nerub'ar Weblord})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))) (keyword*{keywords} (keyword (str{arg}{val=auras}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HasBattlecry}))))))))))))))))))))
(root (ClassDef (str{name}{val=SpectralKnight}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spectral Knight})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))) (keyword*{keywords} (keyword (str{arg}{val=spell_targetable}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False})))))))))))
(root (ClassDef (str{name}{val=WailingSoul}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Wailing Soul})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Silence})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=AmaniBerserker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Amani Berserker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=enrage}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Aura})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))))))))))))))))
(root (ClassDef (str{name}{val=ArchmageAntonidas}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Archmage Antonidas})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AddCard})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=cards}))) (str{attr}{val=Fireball}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=PlayerSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=Bananas}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Bananas})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False})) (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=change_attack}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=increase_health}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))
(root (ClassDef (str{name}{val=BlessedChampion}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blessed Champion})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=DoubleAttack}))))))))))))))
(root (ClassDef (str{name}{val=CabalShadowPriest}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cabal Shadow Priest})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Steal})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackLessThanOrEqualTo})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))))))))))
(root (ClassDef (str{name}{val=ConeOfCold}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Cone of Cold})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen})))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=index}))) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (BinOp (expr{left} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=len})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))))) (operator{op} (Sub)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (BinOp (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (operator{op} (Add)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen}))))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=index}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))) (stmt*{body} (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion}))) (expr{value} (Subscript (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=player}))) (str{attr}{val=minions}))) (slice{slice} (Index (expr{value} (BinOp (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=index})) (operator{op} (Sub)) (expr{right} (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=add_buff}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Frozen})))))))))))))))))
(root (ClassDef (str{name}{val=DefenderOfArgus}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Defender of Argus})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt})))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Doomhammer}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Doomhammer})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))) (keyword*{keywords} (keyword (str{arg}{val=overload}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))) (keyword*{keywords} (keyword (str{arg}{val=buffs}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Windfury}))))))))))))))))
(root (ClassDef (str{name}{val=EarthShock}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Earth Shock})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=SHAMAN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=silence}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))
(root (ClassDef (str{name}{val=EyeForAnEye}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Eye for an Eye})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=amount})))) (stmt*{body} (stmt (If (expr{test} (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=is_hero}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=character})) (str{attr}{val=player}))) (str{attr}{val=opponent}))) (str{attr}{val=hero}))) (str{attr}{val=damage}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=amount})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_damaged})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_damaged})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=Flare}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Flare})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (expr{iter} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (expr (Lambda (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=m})))) (expr{body} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=m})) (str{attr}{val=stealth})))))))) (stmt*{body} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=stealth}))) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (For (expr{target} (str{expr$->$(Name)@Name$->$(str{id})}{val=secret})) (expr{iter} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=secrets}))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=secret})) (str{attr}{val=deactivate}))) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))))))) (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=game})) (str{attr}{val=other_player}))) (str{attr}{val=secrets}))) (expr{value} (List (epsilon))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))))))))
(root (ClassDef (str{name}{val=Gorehowl}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gorehowl})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=create_weapon}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Weapon})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterAttack})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=And})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsHero})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TargetIsMinion}))))))))) (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseDurability})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IncreaseWeaponAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=WeaponSelector}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BuffUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AttackCompleted}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector}))))))))))))))))))))))
(root (ClassDef (str{name}{val=Hound}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Hound})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=HUNTER}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=BEAST}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=charge}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=InjuredBlademaster}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Injured Blademaster})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))))))))))
(root (ClassDef (str{name}{val=KnifeJuggler}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Knife Juggler})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AfterAdded})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))) (keyword (str{arg}{val=condition}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=None}))))))))))))))))))))))
(root (ClassDef (str{name}{val=Lightwell}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Lightwell})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=TurnStarted})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Heal})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsDamaged}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))))))))))
(root (ClassDef (str{name}{val=ManaWyrm}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mana Wyrm})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))) (keyword*{keywords} (keyword (str{arg}{val=effects}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Effect})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ActionTag})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector}))))))))))))))))))))
(root (ClassDef (str{name}{val=MogushanWarden}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Mogu'shan Warden})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=7}))) (keyword*{keywords} (keyword (str{arg}{val=taunt}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=Nourish}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Nourish})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (ClassDef (str{name}{val=Gain2}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Gain 2 mana crystals})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (If (expr{test} (Compare (expr{left} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=max_mana}))) (cmpop*{ops} (Lt{cmpop*$->$(cmpop)@cmpop$->$(Lt)})) (expr*{comparators} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=8}))))) (stmt*{body} (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=max_mana}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2})))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (stmt*{orelse} (stmt (Assign (expr*{targets} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=max_mana}))) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=10})))) (stmt (AugAssign (expr{target} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=mana}))) (operator{op} (Add)) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))))))) (stmt (ClassDef (str{name}{val=Draw3}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=ChoiceCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Draw three cards})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=DRUID}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw}))))))))))) (stmt (Assign (expr*{targets} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=option}))) (expr{value} (Call (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=agent}))) (str{attr}{val=choose_option}))) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Gain2})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Draw3})))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player}))))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=option})) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))))))))))
(root (ClassDef (str{name}{val=Preparation}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Preparation})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ROGUE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC})))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=add_aura}))) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=AuraUntil})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ManaChange})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=-3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsSpell})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCast})))))))))))))))
(root (ClassDef (str{name}{val=Repentance}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Repentance})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PALADIN}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=minion})) (str{attr}{val=set_health_to}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal})))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=game}))) (str{attr}{val=current_player}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=minion_played})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=ShadowOfNothing}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Shadow of Nothing})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=EPIC}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=p})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=0})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=Slam}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SpellCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Slam})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=WARRIOR}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=target_func}) (expr{value} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=hearthbreaker})) (str{attr}{val=targeting}))) (str{attr}{val=find_minion_spell_target}))))))))) (stmt (FunctionDef (str{name}{val=use}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game})))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=use}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=game}))))) (stmt (If (expr{test} (BoolOp (boolop{op} (Or)) (expr*{values} (expr (Compare (expr{left} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=health}))) (cmpop*{ops} (cmpop (Gt))) (expr*{comparators} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))) (expr (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=divine_shield})))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=draw})))))) (stmt*{orelse} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=target}))) (str{attr}{val=damage}))) (expr*{args} (expr (Call (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=effective_spell_damage}))) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))))))))))))
(root (ClassDef (str{name}{val=Spellbreaker}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Spellbreaker})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=NONE})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Silence})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=SunfuryProtector}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Sunfury Protector})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Taunt})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Adjacent}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=TinkmasterOverspark}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Tinkmaster Overspark})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=LEGENDARY})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Transform})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardQuery})) (keyword*{keywords} (keyword (str{arg}{val=source}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_SOURCE})) (str{attr}{val=LIST})))) (keyword (str{arg}{val=source_list}) (expr{value} (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Devilsaur})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Squirrel})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=RandomPicker}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))))))
(root (ClassDef (str{name}{val=Vaporize}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=SecretCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Vaporize})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=MAGE}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE})))))))) (stmt (FunctionDef (str{name}{val=_reveal}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=target})))) (stmt*{body} (stmt (If (expr{test} (BoolOp (boolop{op} (And)) (expr*{values} (expr (Compare (expr{left} (str{expr$->$(Name)@Name$->$(str{id})}{val=target})) (cmpop*{ops} (cmpop (Is))) (expr*{comparators} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=player}))) (str{attr}{val=hero}))))) (expr (Attribute{expr$->$(Call)@Call$->$(expr{func})@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=is_minion}))) (expr (UnaryOp (unaryop{op} (Not)) (expr{operand} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=removed})))))))) (stmt*{body} (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=die}))) (expr*{args} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=attacker})) (str{attr}{val=game}))) (str{attr}{val=check_delayed}))))) (stmt (Call{stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=reveal}))))))))))) (stmt (FunctionDef (str{name}{val=activate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=bind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))) (stmt (FunctionDef (str{name}{val=deactivate}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=player})) (str{attr}{val=opponent}))) (str{attr}{val=unbind}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=character_attack})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (str{attr}{val=_reveal})))))))))))
(root (ClassDef (str{name}{val=WorgenInfiltrator}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Worgen Infiltrator})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))) (keyword*{keywords} (keyword (str{arg}{val=stealth}) (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=True})))))))))))
(root (ClassDef (str{name}{val=BlackwingCorruptor}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Blackwing Corruptor})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Damage})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CharacterSelector})) (keyword*{keywords} (keyword (str{arg}{val=players}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=BothPlayer}))))) (keyword (str{arg}{val=picker}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=UserPicker})))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=5})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=4}))))))))))
(root (ClassDef (str{name}{val=DrakonidCrusher}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Drakonid Crusher})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (expr (expr*{expr$->$(List)@List$->$(expr*{elts})} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeAttack})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3}))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=3})))))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Not})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Attribute})) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=health})) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=HeroSelector})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=EnemyPlayer}))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=15}))))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=6}))))))))))
(root (ClassDef (str{name}{val=Imp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Imp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=ALL}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=RARE}))) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=False}))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DEMON}))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
(root (ClassDef (str{name}{val=TwilightWhelp}) (expr*{bases} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=MinionCard}))) (stmt*{body} (stmt (FunctionDef (str{name}{val=__init__}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Expr)@Expr$->$(expr{value})@expr$->$(Call)} (expr{func} (Attribute (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=super})))) (str{attr}{val=__init__}))) (expr*{args} (expr (str{expr$->$(Str)@Str$->$(str{s})}{val=Twilight Whelp})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1})) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CHARACTER_CLASS})) (str{attr}{val=PRIEST}))) (expr (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=CARD_RARITY})) (str{attr}{val=COMMON})))) (keyword*{keywords} (keyword (str{arg}{val=minion_type}) (expr{value} (Attribute (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON})))) (keyword (str{arg}{val=battlecry}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Battlecry})) (expr*{args} (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Give})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Buff})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=ChangeHealth})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2}))))))))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=SelfSelector})))) (expr (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=GreaterThan})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Count})) (expr*{args} (Call{expr*$->$(expr)@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=CardSelector})) (keyword*{keywords} (keyword (str{arg}{val=condition}) (expr{value} (Call (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=IsType})) (expr*{args} (Attribute{expr*$->$(expr)@expr$->$(Attribute)} (expr{value} (str{expr$->$(Name)@Name$->$(str{id})}{val=MINION_TYPE})) (str{attr}{val=DRAGON}))))))))))) (keyword*{keywords} (keyword (str{arg}{val=value}) (expr{value} (int{expr$->$(Num)@Num$->$(int{n})}{val=0}))))))))))))))) (stmt (FunctionDef (str{name}{val=create_minion}) (arguments{args} (expr*{arguments$->$(arguments)@arguments$->$(expr*{args})} (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=self})) (expr (str{expr$->$(Name)@Name$->$(str{id})}{val=player})))) (stmt*{body} (Call{stmt*$->$(stmt)@stmt$->$(Return)@Return$->$(expr{value})@expr$->$(Call)} (expr{func} (str{expr$->$(Name)@Name$->$(str{id})}{val=Minion})) (expr*{args} (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=2})) (expr (int{expr$->$(Num)@Num$->$(int{n})}{val=1}))))))))))
