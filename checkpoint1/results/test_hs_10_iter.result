class Ogre #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Guardian " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ 
class Ogre #MERGE# Elemental ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Commander " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ 
class Argent #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Ancient " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 
class Murloc #MERGE# Axe ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_weapon ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Weapon ( 1 , 2 ) 
class Ogre #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Mage " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . WARRIOR , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage 
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 1 ) 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self ) #NEWLINE# #INDENT# 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 1 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) 
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Nerubian " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class Argent #MERGE# Tank #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Mage " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 1 ) , Minion #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class Druid #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 , 
class Argent #MERGE# Tank ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent the ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) 
class Arcane #MERGE# Axe ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of Kings " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# for i in range ( 0 , 3 ) : 
class Blessing #MERGE# Of #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# Kings ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of the #INDENT# super ( ) . __init__ ( " Arcane of Kings " , 2 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# 
class Ogre #MERGE# Elemental ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 2 ) 
class Coldlight #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Brewmaster " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class King #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST , battlecry = Battlecry ( Damage ( 2 ) , Hero #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 5 ) 
class King #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 3 , effects = [ Effect ( Turn #MERGE# 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Ancient " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action 
class Dark #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) 
class . #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Imp " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class . #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Mage " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Hero #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 
class Arcane #MERGE# Axe ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_weapon ( self , player ) : #NEWLINE# #INDENT# #INDENT# return super ( ) . can_use ( player , game ) 
class Argent #MERGE# Elemental ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Ancient " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended 
class Argent #MERGE# Mage ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Mage " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) 
class Argent #MERGE# Elemental ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Giant " , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( 
class King #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack 
class Argent #MERGE# Brewmaster ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Nerubian " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 
class Nerubian ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 ) 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of Kings " , 2 , CHARACTER_CLASS . SHAMAN , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# 
class Murloc #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class King #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST , battlecry = Battlecry ( Damage ( 2 ) , Hero #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class Ogre #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Ancient " , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 5 , effects = [ Effect ( Turn #MERGE# Ended 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . damage ( player . effective_spell_damage ( 2 ) , self ) 
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 ) 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Nerubian " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 3 , 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# #INDENT# #INDENT# #INDENT# player 
class Nerubian ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 5 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class Dark #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Dark Iron Knight " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( players = Both #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 ) 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . WARRIOR , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# #INDENT# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . damage ( player . effective_spell_damage ( player . hero ) ) #NEWLINE# #INDENT# #INDENT# #INDENT# self . target . 
class Arcane #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of the the the ( 5 ) , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of Wrath " , 2 , CHARACTER_CLASS . DRUID , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# #INDENT# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 3 , CHARACTER_CLASS . WARRIOR , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( player . hero ) ) #NEWLINE# #INDENT# #INDENT# #INDENT# self . target . 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane Shot " , 2 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player 
class Nerubian ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 1 , 1 ) 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent of the Claw " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# 
class Argent #MERGE# Totem ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Totem " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . MAGE , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self ) #NEWLINE# #INDENT# #INDENT# 
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return 
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Whelp " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class Ogre #MERGE# Giant ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Argent Mage " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . LEGENDARY , minion_type = MINION_TYPE . BEAST ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 3 , 3 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( 
class . #MERGE# ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Ancient " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . BEAST , battlecry = Battlecry ( Damage ( 2 ) , Minion #MERGE# Selector ( Enemy #MERGE# Player ( ) ) ) ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 
class Arcane #MERGE# Shot ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " Arcane of Wrath " , 3 , CHARACTER_CLASS . PALADIN , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_minion_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# player . hero . change_temp_attack ( 2 ) #NEWLINE# #INDENT# #INDENT# #INDENT# player . draw ( 
