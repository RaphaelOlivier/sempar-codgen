class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 ,
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 ,
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Player #MERGE# Selector ( ) ) ) )
class Argent #MERGE# Of #MERGE# The #MERGE# __init__ ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , False ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) .
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) .
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) .
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , taunt =
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects =
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) ,
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , taunt = True )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player ,
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# def __init__ ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give (
class Argent #MERGE# Of #MERGE# The #MERGE# __init__ ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag (
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player .
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Player #MERGE# Selector ( ) ) ) ) #NEWLINE# #NEWLINE#
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give ( Change
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE#
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 )
class Argent #MERGE# Of #MERGE# __init__ ( Weapon #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag ( Give (
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects =
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action #MERGE# Tag
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE#
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE#
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use (
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# def __init__ ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Player #MERGE# Selector ( ) ) ) ] )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE#
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #INDENT# #INDENT# self . target . damage ( player
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) , self )
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT#
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , Weapon " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Player #MERGE# Selector ( ) ) ) ] )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# : ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , CARD_RARITY . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion (
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 ,
class Whelp ( Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 1 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 )
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , minion_type = MINION_TYPE . MECH ) #NEWLINE# #NEWLINE# #INDENT# def create_minion ( self , player ) : #NEWLINE# #INDENT# #INDENT# return Minion ( 2 , 2 , effects = [ Effect ( Turn #MERGE# Ended ( ) , Action
class Argent #MERGE# Of #MERGE# The #MERGE# The #MERGE# The #MERGE# The #MERGE# Minion #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 2 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , battlecry = Battlecry ( Give ( [ Buff ( Change #MERGE# Attack ( 1 ) , Action #MERGE# Tag ( Give ( Change #MERGE# Attack ( 1 ) ) , Action #MERGE# Tag ( Give ( Change
class Arcane #MERGE# Of #MERGE# Of #MERGE# Of #MERGE# Card ( Spell #MERGE# Card ) : #NEWLINE# #INDENT# def __init__ ( self ) : #NEWLINE# #INDENT# #INDENT# super ( ) . __init__ ( " , 3 , CHARACTER_CLASS . ALL , CARD_RARITY . COMMON , target_func = hearthbreaker . targeting . find_spell_target ) #NEWLINE# #NEWLINE# #INDENT# def use ( self , player , game ) : #NEWLINE# #INDENT# #INDENT# super ( ) . use ( player , game ) #NEWLINE# #NEWLINE# #INDENT# #INDENT# self . target . damage ( player . effective_spell_damage ( 2 ) ,
