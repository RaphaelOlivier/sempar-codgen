------------------------------------------------------------
example_id: 17000
params = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17001
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17004
result = ['']
------------------------------------------------------------
------------------------------------------------------------
example_id: 17007
for pos, elt in enumerate(source):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17008
if isinstance(elt, six.string_types):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17009
continue
------------------------------------------------------------
------------------------------------------------------------
example_id: 17011
if isinstance(elt, Group):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17013
param = elt[1]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17014
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17015
param = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 17016
last = pos + 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17018
result[i] += piece
------------------------------------------------------------
------------------------------------------------------------
example_id: 17019
if param:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17022
if isinstance(elt, NonCapture):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17023
elt = [elt]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17024
inner_result, inner_args = [], []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17025
for item in elt:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17026
res, args = flatten_result(item)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17027
inner_result.extend(res)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17028
inner_args.extend(args)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17029
new_result = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17030
new_args = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17031
for item, args in zip(result, result_args):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17033
new_result.append(item + i_item)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17035
result = new_result
------------------------------------------------------------
------------------------------------------------------------
example_id: 17036
result_args = new_args
------------------------------------------------------------
------------------------------------------------------------
example_id: 17037
if pos >= last:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17040
result[i] += piece
------------------------------------------------------------
------------------------------------------------------------
example_id: 17042
from django.utils.functional import curry, Promise
------------------------------------------------------------
------------------------------------------------------------
example_id: 17043
from django.utils import six
------------------------------------------------------------
------------------------------------------------------------
example_id: 17044
class EscapeData(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17045
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17046
class EscapeBytes(bytes, EscapeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17047
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17048
class EscapeText(six.text_type, EscapeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17049
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17050
if six.PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17051
EscapeString = EscapeText
------------------------------------------------------------
------------------------------------------------------------
example_id: 17052
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17053
EscapeString = EscapeBytes
------------------------------------------------------------
------------------------------------------------------------
example_id: 17054
EscapeUnicode = EscapeText
------------------------------------------------------------
------------------------------------------------------------
example_id: 17055
class SafeData(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17056
def __html__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17057
return self
------------------------------------------------------------
------------------------------------------------------------
example_id: 17058
class SafeBytes(bytes, SafeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17059
def __add__(self, rhs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17060
t = super(SafeBytes, self).__add__(rhs)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17061
if isinstance(rhs, SafeText):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17062
return SafeText(t)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17063
if True:
    pass
elif isinstance(rhs, SafeBytes):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17064
return SafeBytes(t)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17065
return t
------------------------------------------------------------
------------------------------------------------------------
example_id: 17066
def _proxy_method(self, *args, **kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17067
method = kwargs.pop('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17069
if isinstance(data, bytes):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17070
return SafeBytes(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17071
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17072
return SafeText(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17074
class SafeText(six.text_type, SafeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17075
def __add__(self, rhs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17076
t = super(SafeText, self).__add__(rhs)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17078
return SafeText(t)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17079
return t
------------------------------------------------------------
------------------------------------------------------------
example_id: 17080
def _proxy_method(self, *args, **kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17081
method = kwargs.pop('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17083
if isinstance(data, bytes):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17084
return SafeBytes(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17085
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17086
return SafeText(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17088
if six.PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17089
SafeString = SafeText
------------------------------------------------------------
------------------------------------------------------------
example_id: 17090
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17091
SafeString = SafeBytes
------------------------------------------------------------
------------------------------------------------------------
example_id: 17092
SafeUnicode = SafeText
------------------------------------------------------------
------------------------------------------------------------
example_id: 17093
def mark_safe(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17094
if isinstance(s, SafeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17095
return s
------------------------------------------------------------
------------------------------------------------------------
example_id: 17097
return SafeBytes(s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17099
return SafeText(s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17101
def mark_for_escaping(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17103
return s
------------------------------------------------------------
------------------------------------------------------------
example_id: 17105
return EscapeBytes(s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17107
return EscapeText(s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17110
import sys
------------------------------------------------------------
------------------------------------------------------------
example_id: 17111
import types
------------------------------------------------------------
------------------------------------------------------------
example_id: 17112
__author__ = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17113
__version__ = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17116
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17120
text_type = str
------------------------------------------------------------
------------------------------------------------------------
example_id: 17121
binary_type = bytes
------------------------------------------------------------
------------------------------------------------------------
example_id: 17122
MAXSIZE = sys.maxsize
------------------------------------------------------------
------------------------------------------------------------
example_id: 17123
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17125
integer_types = int, long
------------------------------------------------------------
------------------------------------------------------------
example_id: 17126
class_types = type, types.ClassType
------------------------------------------------------------
------------------------------------------------------------
example_id: 17127
text_type = unicode
------------------------------------------------------------
------------------------------------------------------------
example_id: 17128
binary_type = str
------------------------------------------------------------
------------------------------------------------------------
example_id: 17131
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17132
class X(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17133
def __len__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17135
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17137
try:
    pass
except OverflowError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17139
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17141
del X
------------------------------------------------------------
------------------------------------------------------------
example_id: 17142
def _add_doc(func, doc):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17143
func.__doc__ = doc
------------------------------------------------------------
------------------------------------------------------------
example_id: 17144
def _import_module(name):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17145
__import__(name)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17146
return sys.modules[name]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17147
class _LazyDescr(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17148
def __init__(self, name):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17149
self.name = name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17150
def __get__(self, obj, tp):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17151
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17152
result = self._resolve()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17153
try:
    pass
except ImportError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17157
return result
------------------------------------------------------------
------------------------------------------------------------
example_id: 17158
class MovedModule(_LazyDescr):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17159
def __init__(self, name, old, new=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17160
super(MovedModule, self).__init__(name)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17161
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17162
if new is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17163
new = name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17165
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17166
self.mod = old
------------------------------------------------------------
------------------------------------------------------------
example_id: 17167
def _resolve(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17168
return _import_module(self.mod)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17171
raise AttributeError(attr)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17172
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17173
_module = self._resolve()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17174
try:
    pass
except ImportError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17175
raise AttributeError(attr)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17176
value = getattr(_module, attr)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17177
setattr(self, attr, value)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17178
return value
------------------------------------------------------------
------------------------------------------------------------
example_id: 17179
class _LazyModule(types.ModuleType):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17180
def __init__(self, name):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17181
super(_LazyModule, self).__init__(name)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17182
self.__doc__ = self.__class__.__doc__
------------------------------------------------------------
------------------------------------------------------------
example_id: 17183
def __dir__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17184
attrs = ['_STR:0_', '_STR:1_']
------------------------------------------------------------
------------------------------------------------------------
example_id: 17186
return attrs
------------------------------------------------------------
------------------------------------------------------------
example_id: 17187
_moved_attributes = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17188
class MovedAttribute(_LazyDescr):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17190
super(MovedAttribute, self).__init__(name)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17191
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17192
if new_mod is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17193
new_mod = name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17195
if new_attr is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17196
if old_attr is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17197
new_attr = name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17198
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17199
new_attr = old_attr
------------------------------------------------------------
------------------------------------------------------------
example_id: 17201
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17203
if old_attr is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17204
old_attr = name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17206
def _resolve(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17207
module = _import_module(self.mod)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17209
class _MovedItems(_LazyModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17211
for attr in _moved_attributes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17213
if isinstance(attr, MovedModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17216
_MovedItems._moved_attributes = _moved_attributes
------------------------------------------------------------
------------------------------------------------------------
example_id: 17218
class Module_six_moves_urllib_parse(_LazyModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17220
for attr in _urllib_parse_moved_attributes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17223
Module_six_moves_urllib_parse._moved_attributes = (
    _urllib_parse_moved_attributes)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17225
class Module_six_moves_urllib_error(_LazyModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17227
for attr in _urllib_error_moved_attributes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17230
Module_six_moves_urllib_error._moved_attributes = (
    _urllib_error_moved_attributes)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17232
class Module_six_moves_urllib_request(_LazyModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17234
for attr in _urllib_request_moved_attributes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17237
Module_six_moves_urllib_request._moved_attributes = (
    _urllib_request_moved_attributes)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17239
class Module_six_moves_urllib_response(_LazyModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17241
for attr in _urllib_response_moved_attributes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17244
Module_six_moves_urllib_response._moved_attributes = (
    _urllib_response_moved_attributes)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17246
class Module_six_moves_urllib_robotparser(_LazyModule):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17248
for attr in _urllib_robotparser_moved_attributes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17251
Module_six_moves_urllib_robotparser._moved_attributes = (
    _urllib_robotparser_moved_attributes)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17253
class Module_six_moves_urllib(types.ModuleType):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17259
def __dir__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17262
def add_move(move):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17264
def remove_move(name):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17265
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17267
try:
    pass
except AttributeError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17268
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17269
del moves.__dict__[name]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17271
raise AttributeError('_STR:0_' % (name,))
------------------------------------------------------------
------------------------------------------------------------
example_id: 17272
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17273
_meth_func = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17274
_meth_self = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17275
_func_closure = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17276
_func_code = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17277
_func_defaults = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17278
_func_globals = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17279
_iterkeys = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17280
_itervalues = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17281
_iteritems = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17282
_iterlists = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17283
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17284
_meth_func = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17285
_meth_self = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17286
_func_closure = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17287
_func_code = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17288
_func_defaults = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17289
_func_globals = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17290
_iterkeys = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17292
_iteritems = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17293
_iterlists = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17294
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17295
advance_iterator = next
------------------------------------------------------------
------------------------------------------------------------
example_id: 17296
try:
    pass
except NameError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17300
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17302
try:
    pass
except NameError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17303
def callable(obj):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17305
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17306
def get_unbound_function(unbound):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17307
return unbound
------------------------------------------------------------
------------------------------------------------------------
example_id: 17309
Iterator = object
------------------------------------------------------------
------------------------------------------------------------
example_id: 17310
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17311
def get_unbound_function(unbound):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17312
return unbound.im_func
------------------------------------------------------------
------------------------------------------------------------
example_id: 17315
class Iterator(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17316
def next(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17317
return type(self).__next__(self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17320
get_method_function = operator.attrgetter(_meth_func)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17321
get_method_self = operator.attrgetter(_meth_self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17326
def iterkeys(d, **kw):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17328
def itervalues(d, **kw):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17330
def iteritems(d, **kw):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17332
def iterlists(d, **kw):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17334
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17335
def b(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17337
def u(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17338
return s
------------------------------------------------------------
------------------------------------------------------------
example_id: 17339
unichr = chr
------------------------------------------------------------
------------------------------------------------------------
example_id: 17341
def int2byte(i):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17343
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17345
byte2int = operator.itemgetter(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17346
indexbytes = operator.getitem
------------------------------------------------------------
------------------------------------------------------------
example_id: 17347
iterbytes = iter
------------------------------------------------------------
------------------------------------------------------------
example_id: 17348
import io
------------------------------------------------------------
------------------------------------------------------------
example_id: 17349
StringIO = io.StringIO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17350
BytesIO = io.BytesIO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17351
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17352
def b(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17353
return s
------------------------------------------------------------
------------------------------------------------------------
example_id: 17354
def u(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17356
unichr = unichr
------------------------------------------------------------
------------------------------------------------------------
example_id: 17357
int2byte = chr
------------------------------------------------------------
------------------------------------------------------------
example_id: 17358
def byte2int(bs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17359
return ord(bs[0])
------------------------------------------------------------
------------------------------------------------------------
example_id: 17360
def indexbytes(buf, i):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17362
def iterbytes(buf):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17364
import StringIO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17368
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17370
def reraise(tp, value, tb=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17371
if value.__traceback__ is not tb:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17372
raise value.with_traceback(tb)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17374
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17376
if _globs_ is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17377
frame = sys._getframe(1)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17378
_globs_ = frame.f_globals
------------------------------------------------------------
------------------------------------------------------------
example_id: 17379
if _locs_ is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17381
del frame
------------------------------------------------------------
------------------------------------------------------------
example_id: 17382
if True:
    pass
elif _locs_ is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17387
if print_ is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17388
def print_(*args, **kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17390
if fp is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17391
return
------------------------------------------------------------
------------------------------------------------------------
example_id: 17392
def write(data):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17393
if not isinstance(data, basestring):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17394
data = str(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17397
if errors is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17398
errors = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17399
data = data.encode(fp.encoding, errors)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17400
fp.write(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17401
want_unicode = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 17403
if sep is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17404
if isinstance(sep, unicode):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17405
want_unicode = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 17407
raise TypeError('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17409
if end is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17410
if isinstance(end, unicode):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17411
want_unicode = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 17413
raise TypeError('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17414
if kwargs:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17415
raise TypeError('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17416
if not want_unicode:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17417
for arg in args:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17418
if isinstance(arg, unicode):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17419
want_unicode = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 17420
break
------------------------------------------------------------
------------------------------------------------------------
example_id: 17421
if want_unicode:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17424
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17426
space = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17427
if sep is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17429
if end is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17431
for i, arg in enumerate(args):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17432
if i:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17433
write(sep)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17434
write(arg)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17435
write(end)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17437
def with_metaclass(meta, *bases):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17438
class metaclass(meta):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17439
__call__ = type.__call__
------------------------------------------------------------
------------------------------------------------------------
example_id: 17440
__init__ = type.__init__
------------------------------------------------------------
------------------------------------------------------------
example_id: 17441
def __new__(cls, name, this_bases, d):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17442
if this_bases is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17445
return metaclass('_STR:0_', None, {})
------------------------------------------------------------
------------------------------------------------------------
example_id: 17446
def add_metaclass(metaclass):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17447
def wrapper(cls):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17448
orig_vars = cls.__dict__.copy()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17451
slots = orig_vars.get('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17452
if slots is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17453
if isinstance(slots, str):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17455
for slots_var in slots:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17457
return metaclass(cls.__name__, cls.__bases__, orig_vars)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17458
return wrapper
------------------------------------------------------------
------------------------------------------------------------
example_id: 17459
if PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17460
_assertCountEqual = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17461
_assertRaisesRegex = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17462
_assertRegex = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17463
memoryview = memoryview
------------------------------------------------------------
------------------------------------------------------------
example_id: 17464
buffer_types = bytes, bytearray, memoryview
------------------------------------------------------------
------------------------------------------------------------
example_id: 17465
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17466
_assertCountEqual = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17467
_assertRaisesRegex = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17468
_assertRegex = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17469
if sys.platform.startswith('_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17470
memoryview = memoryview
------------------------------------------------------------
------------------------------------------------------------
example_id: 17471
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17472
memoryview = buffer
------------------------------------------------------------
------------------------------------------------------------
example_id: 17473
buffer_types = bytearray, memoryview
------------------------------------------------------------
------------------------------------------------------------
example_id: 17474
def assertCountEqual(self, *args, **kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17476
def assertRaisesRegex(self, *args, **kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17478
def assertRegex(self, *args, **kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17482
import contextlib
------------------------------------------------------------
------------------------------------------------------------
example_id: 17483
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17484
import threading
------------------------------------------------------------
------------------------------------------------------------
example_id: 17487
class RWLock(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17488
def __init__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17489
self.mutex = threading.RLock()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17490
self.can_read = threading.Semaphore(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17491
self.can_write = threading.Semaphore(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17492
self.active_readers = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17493
self.active_writers = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17494
self.waiting_readers = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17495
self.waiting_writers = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17496
def reader_enters(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17497
with self.mutex:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17499
self.active_readers += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17500
self.can_read.release()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17501
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17502
self.waiting_readers += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17503
self.can_read.acquire()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17504
def reader_leaves(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17505
with self.mutex:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17506
self.active_readers -= 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17507
if self.active_readers == 0 and self.waiting_writers != 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17508
self.active_writers += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17509
self.waiting_writers -= 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17510
self.can_write.release()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17511
@contextlib.contextmanager
def dummy():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17512
def reader(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17513
self.reader_enters()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17514
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17516
try:
    pass
finally:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17517
self.reader_leaves()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17518
def writer_enters(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17519
with self.mutex:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17521
self.active_writers += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17522
self.can_write.release()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17523
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17524
self.waiting_writers += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17525
self.can_write.acquire()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17526
def writer_leaves(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17527
with self.mutex:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17528
self.active_writers -= 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17529
if self.waiting_writers != 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17530
self.active_writers += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17531
self.waiting_writers -= 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17532
self.can_write.release()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17533
if True:
    pass
elif self.waiting_readers != 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17534
t = self.waiting_readers
------------------------------------------------------------
------------------------------------------------------------
example_id: 17535
self.waiting_readers = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17536
self.active_readers += t
------------------------------------------------------------
------------------------------------------------------------
example_id: 17537
while t > 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17538
self.can_read.release()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17540
@contextlib.contextmanager
def dummy():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17541
def writer(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17542
self.writer_enters()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17543
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17545
try:
    pass
finally:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17546
self.writer_leaves()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17547
from django.utils import six
------------------------------------------------------------
------------------------------------------------------------
example_id: 17554
code_list = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17556
return '_STR:0_' % RESET
------------------------------------------------------------
------------------------------------------------------------
example_id: 17557
for k, v in six.iteritems(kwargs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17558
if k == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17560
if True:
    pass
elif k == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17562
for o in opts:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17563
if o in opt_dict:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17565
if '_STR:0_' not in opts:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17570
NOCOLOR_PALETTE = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17571
DARK_PALETTE = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17572
LIGHT_PALETTE = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17575
def parse_color_setting(config_string):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17576
if not config_string:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17577
return PALETTES[DEFAULT_PALETTE]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17578
parts = config_string.lower().split('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17580
for part in parts:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17581
if part in PALETTES:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17582
palette.update(PALETTES[part])
------------------------------------------------------------
------------------------------------------------------------
example_id: 17583
if True:
    pass
elif '_STR:0_' in part:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17584
definition = {}
------------------------------------------------------------
------------------------------------------------------------
example_id: 17587
styles = instructions.split('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17591
fg = colors.pop()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17592
if fg in color_names:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17593
definition['_STR:0_'] = fg
------------------------------------------------------------
------------------------------------------------------------
example_id: 17594
if colors and colors[-1] in color_names:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17595
definition['_STR:0_'] = colors[-1]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17597
if opts:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17598
definition['_STR:0_'] = opts
------------------------------------------------------------
------------------------------------------------------------
example_id: 17600
palette[role] = definition
------------------------------------------------------------
------------------------------------------------------------
example_id: 17601
if palette == PALETTES[NOCOLOR_PALETTE]:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17602
return None
------------------------------------------------------------
------------------------------------------------------------
example_id: 17603
return palette
------------------------------------------------------------
------------------------------------------------------------
example_id: 17604
from __future__ import unicode_literals
------------------------------------------------------------
------------------------------------------------------------
example_id: 17605
import re
------------------------------------------------------------
------------------------------------------------------------
example_id: 17606
import unicodedata
------------------------------------------------------------
------------------------------------------------------------
example_id: 17607
from gzip import GzipFile
------------------------------------------------------------
------------------------------------------------------------
example_id: 17608
from io import BytesIO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17609
import warnings
------------------------------------------------------------
------------------------------------------------------------
example_id: 17610
from django.utils.deprecation import RemovedInDjango19Warning
------------------------------------------------------------
------------------------------------------------------------
example_id: 17611
from django.utils.encoding import force_text
------------------------------------------------------------
------------------------------------------------------------
example_id: 17612
from django.utils.functional import allow_lazy, SimpleLazyObject
------------------------------------------------------------
------------------------------------------------------------
example_id: 17613
from django.utils import six
------------------------------------------------------------
------------------------------------------------------------
example_id: 17614
from django.utils.six.moves import html_entities
------------------------------------------------------------
------------------------------------------------------------
example_id: 17616
from django.utils.safestring import mark_safe
------------------------------------------------------------
------------------------------------------------------------
example_id: 17617
if six.PY2:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17618
from django.utils.encoding import force_unicode
------------------------------------------------------------
------------------------------------------------------------
example_id: 17624
re_newlines = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17625
re_camel_case = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17626
def wrap(text, width):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17627
text = force_text(text)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17628
def _generator():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17629
for line in text.splitlines(True):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17636
yield line
------------------------------------------------------------
------------------------------------------------------------
example_id: 17637
line = ''
------------------------------------------------------------
------------------------------------------------------------
example_id: 17638
break
------------------------------------------------------------
------------------------------------------------------------
example_id: 17642
if line:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17643
yield line
------------------------------------------------------------
------------------------------------------------------------
example_id: 17644
return ''.join(_generator())
------------------------------------------------------------
------------------------------------------------------------
example_id: 17645
wrap = allow_lazy(wrap, six.text_type)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17646
class Truncator(SimpleLazyObject):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17647
def __init__(self, text):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17650
if truncate is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17652
truncate = force_text(truncate)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17653
if '_STR:0_' in truncate:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17656
return text
------------------------------------------------------------
------------------------------------------------------------
example_id: 17659
length = int(num)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17660
text = unicodedata.normalize('_STR:0_', self._wrapped)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17661
truncate_len = length
------------------------------------------------------------
------------------------------------------------------------
example_id: 17662
for char in self.add_truncation_text('', truncate):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17663
if not unicodedata.combining(char):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17664
truncate_len -= 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17665
if truncate_len == 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17666
break
------------------------------------------------------------
------------------------------------------------------------
example_id: 17667
if html:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17669
return self._text_chars(length, truncate, text, truncate_len)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17670
chars = allow_lazy(chars)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17671
def _text_chars(self, length, truncate, text, truncate_len):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17672
s_len = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17673
end_index = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 17674
for i, char in enumerate(text):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17675
if unicodedata.combining(char):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17676
continue
------------------------------------------------------------
------------------------------------------------------------
example_id: 17677
s_len += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17678
if end_index is None and s_len > truncate_len:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17679
end_index = i
------------------------------------------------------------
------------------------------------------------------------
example_id: 17680
if s_len > length:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17682
return text
------------------------------------------------------------
------------------------------------------------------------
example_id: 17684
length = int(num)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17685
if html:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17687
return self._text_words(length, truncate)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17688
words = allow_lazy(words)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17689
def _text_words(self, length, truncate):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17690
words = self._wrapped.split()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17694
return ' '.join(words)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17695
def _truncate_html(self, length, truncate, text, truncate_len, words):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17697
return ''
------------------------------------------------------------
------------------------------------------------------------
example_id: 17699
pos = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17700
end_text_pos = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17701
current_len = 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17702
open_tags = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17706
if not m:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17707
break
------------------------------------------------------------
------------------------------------------------------------
example_id: 17708
pos = m.end(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17710
current_len += 1
------------------------------------------------------------
------------------------------------------------------------
example_id: 17711
if current_len == truncate_len:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17712
end_text_pos = pos
------------------------------------------------------------
------------------------------------------------------------
example_id: 17713
continue
------------------------------------------------------------
------------------------------------------------------------
example_id: 17716
continue
------------------------------------------------------------
------------------------------------------------------------
example_id: 17717
closing_tag, tagname, self_closing = tag.groups()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17718
tagname = tagname.lower()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17719
if self_closing or tagname in html4_singlets:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17720
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17721
if True:
    pass
elif closing_tag:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17722
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17724
try:
    pass
except ValueError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17725
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17726
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17728
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17729
open_tags.insert(0, tagname)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17731
return text
------------------------------------------------------------
------------------------------------------------------------
example_id: 17733
truncate_text = self.add_truncation_text('', truncate)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17734
if truncate_text:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17736
for tag in open_tags:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17738
return out
------------------------------------------------------------
------------------------------------------------------------
example_id: 17739
def get_valid_filename(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17741
return re.sub('_STR:1_', '', s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17742
get_valid_filename = allow_lazy(get_valid_filename, six.text_type)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17744
if len(list_) == 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17745
return ''
------------------------------------------------------------
------------------------------------------------------------
example_id: 17746
if len(list_) == 1:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17747
return force_text(list_[0])
------------------------------------------------------------
------------------------------------------------------------
example_id: 17750
def normalize_newlines(text):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17751
text = force_text(text)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17752
return re_newlines.sub('_STR:0_', text)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17753
normalize_newlines = allow_lazy(normalize_newlines, six.text_type)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17754
def phone2numeric(phone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17757
phone2numeric = allow_lazy(phone2numeric)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17758
def compress_string(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17759
zbuf = BytesIO()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17761
zfile.write(s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17762
zfile.close()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17763
return zbuf.getvalue()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17764
class StreamingBuffer(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17765
def __init__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17766
self.vals = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17767
def write(self, val):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17768
self.vals.append(val)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17769
def read(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17770
ret = ''.join(self.vals)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17771
self.vals = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 17772
return ret
------------------------------------------------------------
------------------------------------------------------------
example_id: 17773
def flush(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17774
return
------------------------------------------------------------
------------------------------------------------------------
example_id: 17775
def close(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17776
return
------------------------------------------------------------
------------------------------------------------------------
example_id: 17777
def compress_sequence(sequence):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17778
buf = StreamingBuffer()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17781
for item in sequence:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17784
yield buf.read()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17786
yield buf.read()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17787
ustring_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17788
def javascript_quote(s, quote_double_quotes=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17791
def fix(match):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17793
if type(s) == bytes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17794
s = s.decode('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17796
raise TypeError(s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17803
if quote_double_quotes:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17805
return ustring_re.sub(fix, s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17806
javascript_quote = allow_lazy(javascript_quote, six.text_type)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17808
def smart_split(text):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17809
text = force_text(text)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17810
for bit in smart_split_re.finditer(text):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17811
yield bit.group(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17812
def _replace_entity(match):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17813
text = match.group(1)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17814
if text[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17816
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17817
if text[0] in '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17821
return six.unichr(c)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17822
try:
    pass
except ValueError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17823
return match.group(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17824
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17825
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17826
return six.unichr(html_entities.name2codepoint[text])
------------------------------------------------------------
------------------------------------------------------------
example_id: 17828
return match.group(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17829
_entity_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 17830
def unescape_entities(text):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17831
return _entity_re.sub(_replace_entity, text)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17832
unescape_entities = allow_lazy(unescape_entities, six.text_type)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17833
def unescape_string_literal(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17835
raise ValueError('_STR:0_' % s)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17836
quote = s[0]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17838
unescape_string_literal = allow_lazy(unescape_string_literal)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17839
def slugify(value):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17844
def camel_case_to_spaces(value):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17846
from __future__ import unicode_literals
------------------------------------------------------------
------------------------------------------------------------
example_id: 17847
import datetime
------------------------------------------------------------
------------------------------------------------------------
example_id: 17848
from django.utils.html import avoid_wrapping
------------------------------------------------------------
------------------------------------------------------------
example_id: 17849
from django.utils.timezone import is_aware, utc
------------------------------------------------------------
------------------------------------------------------------
example_id: 17850
from django.utils.translation import ugettext, ungettext_lazy
------------------------------------------------------------
------------------------------------------------------------
example_id: 17856
now = datetime.datetime(now.year, now.month, now.day)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17857
if not now:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17862
return avoid_wrapping(ugettext('_STR:0_'))
------------------------------------------------------------
------------------------------------------------------------
example_id: 17863
for i, (seconds, name) in enumerate(chunks):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17865
if count != 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17866
break
------------------------------------------------------------
------------------------------------------------------------
example_id: 17871
if count2 != 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17873
return result
------------------------------------------------------------
------------------------------------------------------------
example_id: 17877
from threading import local
------------------------------------------------------------
------------------------------------------------------------
example_id: 17878
import sys
------------------------------------------------------------
------------------------------------------------------------
example_id: 17879
import time as _time
------------------------------------------------------------
------------------------------------------------------------
example_id: 17880
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17881
import pytz
------------------------------------------------------------
------------------------------------------------------------
example_id: 17882
try:
    pass
except ImportError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17883
pytz = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 17884
from django.conf import settings
------------------------------------------------------------
------------------------------------------------------------
example_id: 17885
from django.utils import six
------------------------------------------------------------
------------------------------------------------------------
example_id: 17888
class UTC(tzinfo):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17889
def __repr__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17890
return '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17891
def utcoffset(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17892
return ZERO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17893
def tzname(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17894
return '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 17895
def dst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17896
return ZERO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17897
class FixedOffset(tzinfo):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17898
def __init__(self, offset=None, name=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17899
if offset is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17900
self.__offset = timedelta(minutes=offset)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17901
if name is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17902
self.__name = name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17903
def utcoffset(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17904
return self.__offset
------------------------------------------------------------
------------------------------------------------------------
example_id: 17905
def tzname(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17906
return self.__name
------------------------------------------------------------
------------------------------------------------------------
example_id: 17907
def dst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17908
return ZERO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17909
class ReferenceLocalTimezone(tzinfo):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17910
def __init__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17912
if _time.daylight:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17914
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17915
self.DSTOFFSET = self.STDOFFSET
------------------------------------------------------------
------------------------------------------------------------
example_id: 17917
tzinfo.__init__(self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17918
def utcoffset(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17919
if self._isdst(dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17920
return self.DSTOFFSET
------------------------------------------------------------
------------------------------------------------------------
example_id: 17921
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17922
return self.STDOFFSET
------------------------------------------------------------
------------------------------------------------------------
example_id: 17924
if self._isdst(dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17925
return self.DSTDIFF
------------------------------------------------------------
------------------------------------------------------------
example_id: 17926
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17927
return ZERO
------------------------------------------------------------
------------------------------------------------------------
example_id: 17928
def tzname(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17929
return _time.tzname[self._isdst(dt)]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17930
def _isdst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17933
tt = _time.localtime(stamp)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17934
return tt.tm_isdst > 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 17935
class LocalTimezone(ReferenceLocalTimezone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17936
def tzname(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17938
return _time.tzname[is_dst]
------------------------------------------------------------
------------------------------------------------------------
example_id: 17939
def _isdst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17940
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17941
return super(LocalTimezone, self)._isdst(dt)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17943
exc_type = type(exc)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17945
exc_value.__cause__ = exc
------------------------------------------------------------
------------------------------------------------------------
example_id: 17946
six.reraise(exc_type, exc_value, sys.exc_info()[2])
------------------------------------------------------------
------------------------------------------------------------
example_id: 17948
def get_fixed_timezone(offset):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17949
if isinstance(offset, timedelta):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17954
return FixedOffset(offset, name)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17955
_localtime = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 17956
def get_default_timezone():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17957
global _localtime
------------------------------------------------------------
------------------------------------------------------------
example_id: 17958
if _localtime is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17959
if isinstance(settings.TIME_ZONE, six.string_types) and pytz is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17960
_localtime = pytz.timezone(settings.TIME_ZONE)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17961
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17962
_localtime = LocalTimezone()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17963
return _localtime
------------------------------------------------------------
------------------------------------------------------------
example_id: 17964
def get_default_timezone_name():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17966
_active = local()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17967
def get_current_timezone():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17969
def get_current_timezone_name():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17971
def _get_timezone_name(timezone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17972
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17973
return timezone.zone
------------------------------------------------------------
------------------------------------------------------------
example_id: 17974
try:
    pass
except AttributeError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17975
return timezone.tzname(None)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17976
def activate(timezone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17977
if isinstance(timezone, tzinfo):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17978
_active.value = timezone
------------------------------------------------------------
------------------------------------------------------------
example_id: 17979
if True:
    pass
elif isinstance(timezone, six.string_types) and pytz is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17981
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17983
def deactivate():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17985
del _active.value
------------------------------------------------------------
------------------------------------------------------------
example_id: 17986
class override(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17987
def __init__(self, timezone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17988
self.timezone = timezone
------------------------------------------------------------
------------------------------------------------------------
example_id: 17990
def __enter__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17991
if self.timezone is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17992
deactivate()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17993
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17994
activate(self.timezone)
------------------------------------------------------------
------------------------------------------------------------
example_id: 17995
def __exit__(self, exc_type, exc_value, traceback):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17996
if self.old_timezone is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17997
deactivate()
------------------------------------------------------------
------------------------------------------------------------
example_id: 17998
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 17999
_active.value = self.old_timezone
------------------------------------------------------------
------------------------------------------------------------
example_id: 18000
def template_localtime(value, use_tz=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18003
def localtime(value, timezone=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18004
if timezone is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18005
timezone = get_current_timezone()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18007
if hasattr(timezone, '_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18008
value = timezone.normalize(value)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18009
return value
------------------------------------------------------------
------------------------------------------------------------
example_id: 18010
def now():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18011
if settings.USE_TZ:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18013
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18014
return datetime.now()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18015
def is_aware(value):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18017
def is_naive(value):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18019
def make_aware(value, timezone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18020
if hasattr(timezone, '_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18022
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18023
if is_aware(value):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18024
raise ValueError('_STR:0_' % value)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18026
def make_naive(value, timezone):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18028
if hasattr(timezone, '_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18029
value = timezone.normalize(value)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18030
return value.replace(tzinfo=None)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18031
from __future__ import unicode_literals
------------------------------------------------------------
------------------------------------------------------------
example_id: 18032
import re
------------------------------------------------------------
------------------------------------------------------------
example_id: 18033
from django.utils.encoding import force_text
------------------------------------------------------------
------------------------------------------------------------
example_id: 18034
from django.utils.functional import lazy
------------------------------------------------------------
------------------------------------------------------------
example_id: 18035
from django.utils import six
------------------------------------------------------------
------------------------------------------------------------
example_id: 18038
class TranslatorCommentWarning(SyntaxWarning):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18039
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18040
class Trans(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18041
def __getattr__(self, real_name):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18042
from django.conf import settings
------------------------------------------------------------
------------------------------------------------------------
example_id: 18043
if settings.USE_I18N:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18044
from django.utils.translation import trans_real as trans
------------------------------------------------------------
------------------------------------------------------------
example_id: 18045
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18046
from django.utils.translation import trans_null as trans
------------------------------------------------------------
------------------------------------------------------------
example_id: 18048
return getattr(trans, real_name)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18049
_trans = Trans()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18050
del Trans
------------------------------------------------------------
------------------------------------------------------------
example_id: 18051
def gettext_noop(message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18053
ugettext_noop = gettext_noop
------------------------------------------------------------
------------------------------------------------------------
example_id: 18056
def ngettext(singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18058
def ugettext(message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18060
def ungettext(singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18062
def pgettext(context, message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18064
def npgettext(context, singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18070
if isinstance(number, int):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18071
kwargs['_STR:0_'] = number
------------------------------------------------------------
------------------------------------------------------------
example_id: 18073
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18074
class NumberAwareString(resultclass):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18075
def __mod__(self, rhs):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18077
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18078
number_value = rhs[number]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18079
try:
    pass
except KeyError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18081
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18082
number_value = rhs
------------------------------------------------------------
------------------------------------------------------------
example_id: 18083
kwargs['_STR:0_'] = number_value
------------------------------------------------------------
------------------------------------------------------------
example_id: 18084
translated = func(**kwargs)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18085
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18086
translated = translated % rhs
------------------------------------------------------------
------------------------------------------------------------
example_id: 18087
try:
    pass
except TypeError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18088
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18089
return translated
------------------------------------------------------------
------------------------------------------------------------
example_id: 18091
return proxy
------------------------------------------------------------
------------------------------------------------------------
example_id: 18092
def ngettext_lazy(singular, plural, number=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18096
def npgettext_lazy(context, singular, plural, number=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18098
def activate(language):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18099
return _trans.activate(language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18100
def deactivate():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18101
return _trans.deactivate()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18102
class override(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18103
def __init__(self, language, deactivate=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18104
self.language = language
------------------------------------------------------------
------------------------------------------------------------
example_id: 18105
self.deactivate = deactivate
------------------------------------------------------------
------------------------------------------------------------
example_id: 18106
self.old_language = get_language()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18107
def __enter__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18108
if self.language is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18109
activate(self.language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18110
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18111
deactivate_all()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18112
def __exit__(self, exc_type, exc_value, traceback):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18113
if self.deactivate:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18114
deactivate()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18115
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18116
activate(self.old_language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18117
def get_language():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18118
return _trans.get_language()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18119
def get_language_bidi():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18120
return _trans.get_language_bidi()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18121
def check_for_language(lang_code):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18122
return _trans.check_for_language(lang_code)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18123
def to_locale(language):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18124
return _trans.to_locale(language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18125
def get_language_from_request(request, check_path=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18126
return _trans.get_language_from_request(request, check_path)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18127
def get_language_from_path(path):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18128
return _trans.get_language_from_path(path)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18129
def templatize(src, origin=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18130
return _trans.templatize(src, origin)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18131
def deactivate_all():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18132
return _trans.deactivate_all()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18135
string_concat = lazy(_string_concat, six.text_type)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18136
def get_language_info(lang_code):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18137
from django.conf.locale import LANG_INFO
------------------------------------------------------------
------------------------------------------------------------
example_id: 18138
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18139
return LANG_INFO[lang_code]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18140
try:
    pass
except KeyError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18141
if '_STR:0_' not in lang_code:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18142
raise KeyError('_STR:0_' % lang_code)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18143
generic_lang_code = lang_code.split('_STR:0_')[0]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18144
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18145
return LANG_INFO[generic_lang_code]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18146
try:
    pass
except KeyError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18148
trim_whitespace_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18149
def trim_whitespace(s):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18151
from django.conf import settings
------------------------------------------------------------
------------------------------------------------------------
example_id: 18152
from django.utils.encoding import force_text
------------------------------------------------------------
------------------------------------------------------------
example_id: 18153
from django.utils.safestring import mark_safe, SafeData
------------------------------------------------------------
------------------------------------------------------------
example_id: 18154
def ngettext(singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18155
if number == 1:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18156
return singular
------------------------------------------------------------
------------------------------------------------------------
example_id: 18157
return plural
------------------------------------------------------------
------------------------------------------------------------
example_id: 18158
ngettext_lazy = ngettext
------------------------------------------------------------
------------------------------------------------------------
example_id: 18159
def ungettext(singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18161
def pgettext(context, message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18165
activate = lambda x: None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18169
check_for_language = lambda x: True
------------------------------------------------------------
------------------------------------------------------------
example_id: 18170
def gettext(message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18171
if isinstance(message, SafeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18172
return mark_safe(message)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18173
return message
------------------------------------------------------------
------------------------------------------------------------
example_id: 18174
def ugettext(message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18177
def to_locale(language):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18179
if p >= 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18181
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18182
return language.lower()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18183
def get_language_from_request(request, check_path=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18184
return settings.LANGUAGE_CODE
------------------------------------------------------------
------------------------------------------------------------
example_id: 18185
def get_language_from_path(request):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18186
return None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18187
from __future__ import unicode_literals
------------------------------------------------------------
------------------------------------------------------------
example_id: 18188
from collections import OrderedDict
------------------------------------------------------------
------------------------------------------------------------
example_id: 18189
import os
------------------------------------------------------------
------------------------------------------------------------
example_id: 18190
import re
------------------------------------------------------------
------------------------------------------------------------
example_id: 18191
import sys
------------------------------------------------------------
------------------------------------------------------------
example_id: 18192
import gettext as gettext_module
------------------------------------------------------------
------------------------------------------------------------
example_id: 18193
from threading import local
------------------------------------------------------------
------------------------------------------------------------
example_id: 18194
import warnings
------------------------------------------------------------
------------------------------------------------------------
example_id: 18195
from django.apps import apps
------------------------------------------------------------
------------------------------------------------------------
example_id: 18196
from django.conf import settings
------------------------------------------------------------
------------------------------------------------------------
example_id: 18197
from django.core.exceptions import AppRegistryNotReady
------------------------------------------------------------
------------------------------------------------------------
example_id: 18198
from django.dispatch import receiver
------------------------------------------------------------
------------------------------------------------------------
example_id: 18199
from django.test.signals import setting_changed
------------------------------------------------------------
------------------------------------------------------------
example_id: 18200
from django.utils.deprecation import RemovedInDjango19Warning
------------------------------------------------------------
------------------------------------------------------------
example_id: 18201
from django.utils.encoding import force_text
------------------------------------------------------------
------------------------------------------------------------
example_id: 18202
from django.utils._os import upath
------------------------------------------------------------
------------------------------------------------------------
example_id: 18203
from django.utils.safestring import mark_safe, SafeData
------------------------------------------------------------
------------------------------------------------------------
example_id: 18204
from django.utils import six, lru_cache
------------------------------------------------------------
------------------------------------------------------------
example_id: 18205
from django.utils.six import StringIO
------------------------------------------------------------
------------------------------------------------------------
example_id: 18206
from django.utils.translation import TranslatorCommentWarning, trim_whitespace, LANGUAGE_SESSION_KEY
------------------------------------------------------------
------------------------------------------------------------
example_id: 18207
_translations = {}
------------------------------------------------------------
------------------------------------------------------------
example_id: 18208
_active = local()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18209
_default = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18210
_supported = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18211
CONTEXT_SEPARATOR = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 18214
language_code_prefix_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18215
_BROWSERS_DEPRECATED_LOCALES = {'_STR:1_': '_STR:0_', '_STR:3_': '_STR:2_'}
------------------------------------------------------------
------------------------------------------------------------
example_id: 18216
_DJANGO_DEPRECATED_LOCALES = _BROWSERS_DEPRECATED_LOCALES
------------------------------------------------------------
------------------------------------------------------------
example_id: 18217
@receiver(setting_changed)
def dummy():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18219
if kwargs['_STR:0_'] in ('_STR:1_', '_STR:2_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18220
global _supported
------------------------------------------------------------
------------------------------------------------------------
example_id: 18221
_supported = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18222
check_for_language.cache_clear()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18223
get_supported_language_variant.cache_clear()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18224
def to_locale(language, to_lower=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18226
if p >= 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18227
if to_lower:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18229
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18233
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18234
return language.lower()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18235
def to_language(locale):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18237
if p >= 0:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18239
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18240
return locale.lower()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18241
class DjangoTranslation(gettext_module.GNUTranslations):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18242
def __init__(self, language):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18243
gettext_module.GNUTranslations.__init__(self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18244
self.__language = language
------------------------------------------------------------
------------------------------------------------------------
example_id: 18245
self.__to_language = to_language(language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18246
self.__locale = to_locale(language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18248
self._init_translation_catalog()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18249
self._add_installed_apps_translations()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18250
self._add_local_translations()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18251
self._add_fallback()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18252
def __repr__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18253
return '_STR:0_' % self.__language
------------------------------------------------------------
------------------------------------------------------------
example_id: 18254
def _new_gnu_trans(self, localedir, use_null_fallback=True):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18257
translation._catalog = {}
------------------------------------------------------------
------------------------------------------------------------
example_id: 18258
translation._info = {}
------------------------------------------------------------
------------------------------------------------------------
example_id: 18259
return translation
------------------------------------------------------------
------------------------------------------------------------
example_id: 18260
def _init_translation_catalog(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18263
use_null_fallback = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 18264
if self.__language == settings.LANGUAGE_CODE:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18265
use_null_fallback = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18266
translation = self._new_gnu_trans(localedir, use_null_fallback)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18267
self._info = translation._info.copy()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18268
self._catalog = translation._catalog.copy()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18269
def _add_installed_apps_translations(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18270
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18272
try:
    pass
except AppRegistryNotReady:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18274
for app_config in app_configs:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18275
localedir = os.path.join(app_config.path, '_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18276
translation = self._new_gnu_trans(localedir)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18277
self.merge(translation)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18278
def _add_local_translations(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18280
translation = self._new_gnu_trans(localedir)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18281
self.merge(translation)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18282
def _add_fallback(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18283
if self.__language == settings.LANGUAGE_CODE or self.__language == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18284
return
------------------------------------------------------------
------------------------------------------------------------
example_id: 18285
default_translation = translation(settings.LANGUAGE_CODE)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18286
self.add_fallback(default_translation)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18287
def merge(self, other):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18288
self._catalog.update(other._catalog)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18289
def language(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18290
return self.__language
------------------------------------------------------------
------------------------------------------------------------
example_id: 18291
def to_language(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18292
return self.__to_language
------------------------------------------------------------
------------------------------------------------------------
example_id: 18293
def translation(language):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18294
global _translations
------------------------------------------------------------
------------------------------------------------------------
example_id: 18295
if language not in _translations:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18298
def activate(language):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18299
if language in _DJANGO_DEPRECATED_LOCALES:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18302
_active.value = translation(language)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18303
def deactivate():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18304
if hasattr(_active, '_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18305
del _active.value
------------------------------------------------------------
------------------------------------------------------------
example_id: 18306
def deactivate_all():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18307
_active.value = gettext_module.NullTranslations()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18308
def get_language():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18310
if t is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18311
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18312
return t.to_language()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18313
try:
    pass
except AttributeError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18314
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18315
return settings.LANGUAGE_CODE
------------------------------------------------------------
------------------------------------------------------------
example_id: 18316
def get_language_bidi():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18317
base_lang = get_language().split('_STR:0_')[0]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18318
return base_lang in settings.LANGUAGES_BIDI
------------------------------------------------------------
------------------------------------------------------------
example_id: 18319
def catalog():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18320
global _default
------------------------------------------------------------
------------------------------------------------------------
example_id: 18322
if t is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18323
return t
------------------------------------------------------------
------------------------------------------------------------
example_id: 18324
if _default is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18325
_default = translation(settings.LANGUAGE_CODE)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18327
def do_translate(message, translation_function):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18328
global _default
------------------------------------------------------------
------------------------------------------------------------
example_id: 18331
if t is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18333
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18334
if _default is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18335
_default = translation(settings.LANGUAGE_CODE)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18337
if isinstance(message, SafeData):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18338
return mark_safe(result)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18339
return result
------------------------------------------------------------
------------------------------------------------------------
example_id: 18340
def gettext(message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18341
return do_translate(message, '_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18342
if six.PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18344
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18345
def ugettext(message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18346
return do_translate(message, '_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18347
def pgettext(context, message):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18349
result = ugettext(msg_with_ctxt)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18352
return result
------------------------------------------------------------
------------------------------------------------------------
example_id: 18354
return message
------------------------------------------------------------
------------------------------------------------------------
example_id: 18356
global _default
------------------------------------------------------------
------------------------------------------------------------
example_id: 18358
if t is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18360
if _default is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18361
_default = translation(settings.LANGUAGE_CODE)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18363
def ngettext(singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18365
if six.PY3:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18366
ungettext = ngettext
------------------------------------------------------------
------------------------------------------------------------
example_id: 18367
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18368
def ungettext(singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18370
def npgettext(context, singular, plural, number):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18374
result = ungettext(singular, plural, number)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18375
return result
------------------------------------------------------------
------------------------------------------------------------
example_id: 18376
def all_locale_paths():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18379
@lru_cache.lru_cache(maxsize=1000)
def dummy():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18380
def check_for_language(lang_code):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18381
if not language_code_re.search(lang_code):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18382
return False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18383
for path in all_locale_paths():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18386
return False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18387
@lru_cache.lru_cache(maxsize=1000)
def dummy():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18388
def get_supported_language_variant(lang_code, strict=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18389
global _supported
------------------------------------------------------------
------------------------------------------------------------
example_id: 18390
if _supported is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18391
_supported = OrderedDict(settings.LANGUAGES)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18392
if lang_code:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18395
return replacement
------------------------------------------------------------
------------------------------------------------------------
example_id: 18396
generic_lang_code = lang_code.split('_STR:0_')[0]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18397
for code in (lang_code, generic_lang_code):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18398
if code in _supported and check_for_language(code):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18399
return code
------------------------------------------------------------
------------------------------------------------------------
example_id: 18400
if not strict:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18401
for supported_code in _supported:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18403
return supported_code
------------------------------------------------------------
------------------------------------------------------------
example_id: 18404
raise LookupError(lang_code)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18405
def get_language_from_path(path, strict=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18406
regex_match = language_code_prefix_re.match(path)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18407
if not regex_match:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18408
return None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18409
lang_code = regex_match.group(1)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18410
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18411
return get_supported_language_variant(lang_code, strict=strict)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18412
try:
    pass
except LookupError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18413
return None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18414
def get_language_from_request(request, check_path=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18415
global _supported
------------------------------------------------------------
------------------------------------------------------------
example_id: 18416
if _supported is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18417
_supported = OrderedDict(settings.LANGUAGES)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18418
if check_path:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18419
lang_code = get_language_from_path(request.path_info)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18420
if lang_code is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18421
return lang_code
------------------------------------------------------------
------------------------------------------------------------
example_id: 18422
if hasattr(request, '_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18427
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18428
return get_supported_language_variant(lang_code)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18429
try:
    pass
except LookupError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18430
pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18433
if accept_lang == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18434
break
------------------------------------------------------------
------------------------------------------------------------
example_id: 18435
if not language_code_re.search(accept_lang):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18436
continue
------------------------------------------------------------
------------------------------------------------------------
example_id: 18437
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18438
return get_supported_language_variant(accept_lang)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18439
try:
    pass
except LookupError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18440
continue
------------------------------------------------------------
------------------------------------------------------------
example_id: 18441
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18442
return get_supported_language_variant(settings.LANGUAGE_CODE)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18443
try:
    pass
except LookupError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18444
return settings.LANGUAGE_CODE
------------------------------------------------------------
------------------------------------------------------------
example_id: 18445
dot_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18446
def blankout(src, char):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18447
return dot_re.sub(char, src)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18451
endblock_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18452
plural_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18454
one_percent_re = re.compile('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18455
def templatize(src, origin=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18458
out = StringIO('')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18459
message_context = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18460
intrans = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18461
inplural = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18462
trimmed = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18463
singular = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18464
plural = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18465
incomment = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18466
comment = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18467
lineno_comment_map = {}
------------------------------------------------------------
------------------------------------------------------------
example_id: 18468
comment_lineno_cache = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18469
def join_tokens(tokens, trim=False):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18470
message = ''.join(tokens)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18471
if trim:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18472
message = trim_whitespace(message)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18473
return message
------------------------------------------------------------
------------------------------------------------------------
example_id: 18475
if incomment:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18476
if t.token_type == TOKEN_BLOCK and t.contents == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18477
content = ''.join(comment)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18478
translators_comment_start = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18479
for lineno, line in enumerate(content.splitlines(True)):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18481
translators_comment_start = lineno
------------------------------------------------------------
------------------------------------------------------------
example_id: 18482
for lineno, line in enumerate(content.splitlines(True)):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18483
if translators_comment_start is not None and lineno >= translators_comment_start:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18484
out.write('_STR:0_' % line)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18485
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18487
incomment = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18488
comment = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18489
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18490
comment.append(t.contents)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18491
if True:
    pass
elif intrans:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18492
if t.token_type == TOKEN_BLOCK:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18495
if endbmatch:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18496
if inplural:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18497
if message_context:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18499
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18502
out.write(blankout(part, '_STR:0_'))
------------------------------------------------------------
------------------------------------------------------------
example_id: 18503
for part in plural:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18504
out.write(blankout(part, '_STR:0_'))
------------------------------------------------------------
------------------------------------------------------------
example_id: 18505
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18506
if message_context:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18508
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18511
out.write(blankout(part, '_STR:0_'))
------------------------------------------------------------
------------------------------------------------------------
example_id: 18512
message_context = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18513
intrans = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18514
inplural = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18515
singular = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18516
plural = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18517
if True:
    pass
elif pluralmatch:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18518
inplural = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 18519
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18520
filemsg = ''
------------------------------------------------------------
------------------------------------------------------------
example_id: 18521
if origin:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18522
filemsg = '_STR:0_' % origin
------------------------------------------------------------
------------------------------------------------------------
example_id: 18524
if True:
    pass
elif t.token_type == TOKEN_VAR:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18525
if inplural:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18527
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18530
contents = one_percent_re.sub('_STR:0_', t.contents)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18531
if inplural:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18532
plural.append(contents)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18533
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18534
singular.append(contents)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18535
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18536
if comment_lineno_cache is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18538
if comment_lineno_cache == cur_lineno:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18539
if t.token_type != TOKEN_COMMENT:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18541
filemsg = ''
------------------------------------------------------------
------------------------------------------------------------
example_id: 18542
if origin:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18543
filemsg = '_STR:0_' % origin
------------------------------------------------------------
------------------------------------------------------------
example_id: 18545
warnings.warn(warn_msg, TranslatorCommentWarning)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18547
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18550
if t.token_type == TOKEN_BLOCK:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18553
cmatches = constant_re.findall(t.contents)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18554
if imatch:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18555
g = imatch.group(1)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18556
if g[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18558
if True:
    pass
elif g[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18563
message_context = context_match.group(1)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18564
if message_context[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18565
message_context = message_context.strip('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18566
if True:
    pass
elif message_context[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18567
message_context = message_context.strip('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18569
message_context = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18570
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18571
out.write('_STR:0_' % g)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18572
if True:
    pass
elif bmatch:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18573
for fmatch in constant_re.findall(t.contents):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18574
out.write('_STR:0_' % fmatch)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18575
if bmatch.group(1):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18577
message_context = context_match.group(1)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18578
if message_context[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18579
message_context = message_context.strip('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18580
if True:
    pass
elif message_context[0] == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18581
message_context = message_context.strip('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18582
intrans = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 18583
inplural = False
------------------------------------------------------------
------------------------------------------------------------
example_id: 18584
trimmed = '_STR:0_' in t.split_contents()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18585
singular = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18586
plural = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18587
if True:
    pass
elif cmatches:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18588
for cmatch in cmatches:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18590
if True:
    pass
elif t.contents == '_STR:0_':
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18591
incomment = True
------------------------------------------------------------
------------------------------------------------------------
example_id: 18592
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18593
out.write(blankout(t.contents, '_STR:0_'))
------------------------------------------------------------
------------------------------------------------------------
example_id: 18594
if True:
    pass
elif t.token_type == TOKEN_VAR:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18596
cmatch = constant_re.match(parts[0])
------------------------------------------------------------
------------------------------------------------------------
example_id: 18597
if cmatch:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18599
for p in parts[1:]:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18602
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18604
if True:
    pass
elif t.token_type == TOKEN_COMMENT:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18608
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18609
out.write(blankout(t.contents, '_STR:0_'))
------------------------------------------------------------
------------------------------------------------------------
example_id: 18610
return out.getvalue()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18611
def parse_accept_lang_header(lang_string):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18612
result = []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18614
if pieces[-1]:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18615
return []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18618
if first:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18619
return []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18620
if priority:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18621
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18622
priority = float(priority)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18623
try:
    pass
except ValueError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18624
return []
------------------------------------------------------------
------------------------------------------------------------
example_id: 18625
if not priority:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18629
return result
------------------------------------------------------------
------------------------------------------------------------
example_id: 18630
import copy
------------------------------------------------------------
------------------------------------------------------------
example_id: 18631
class Node(object):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18632
default = '_STR:0_'
------------------------------------------------------------
------------------------------------------------------------
example_id: 18635
self.connector = connector or self.default
------------------------------------------------------------
------------------------------------------------------------
example_id: 18636
self.negated = negated
------------------------------------------------------------
------------------------------------------------------------
example_id: 18637
@classmethod
def dummy():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18639
obj = Node(children, connector, negated)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18641
return obj
------------------------------------------------------------
------------------------------------------------------------
example_id: 18642
def __str__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18643
if self.negated:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18646
def __repr__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18647
return '_STR:0_' % (self.__class__.__name__, self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18648
def __deepcopy__(self, memodict):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18650
obj.__class__ = self.__class__
------------------------------------------------------------
------------------------------------------------------------
example_id: 18652
return obj
------------------------------------------------------------
------------------------------------------------------------
example_id: 18653
def __len__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18654
return len(self.children)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18655
def __bool__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18656
return bool(self.children)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18657
def __nonzero__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18658
return type(self).__bool__(self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18659
def __contains__(self, other):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18660
return other in self.children
------------------------------------------------------------
------------------------------------------------------------
example_id: 18661
def _prepare_data(self, data):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18662
return data
------------------------------------------------------------
------------------------------------------------------------
example_id: 18663
def add(self, data, conn_type, squash=True):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18664
if data in self.children:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18665
return data
------------------------------------------------------------
------------------------------------------------------------
example_id: 18666
data = self._prepare_data(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18667
if not squash:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18668
self.children.append(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18669
return data
------------------------------------------------------------
------------------------------------------------------------
example_id: 18670
if self.connector == conn_type:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18673
return self
------------------------------------------------------------
------------------------------------------------------------
example_id: 18674
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18675
self.children.append(data)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18676
return data
------------------------------------------------------------
------------------------------------------------------------
example_id: 18677
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18678
obj = self._new_instance(self.children, self.connector, self.negated)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18680
self.children = [obj, data]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18681
return data
------------------------------------------------------------
------------------------------------------------------------
example_id: 18682
def negate(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18684
from __future__ import unicode_literals
------------------------------------------------------------
------------------------------------------------------------
example_id: 18686
import time
------------------------------------------------------------
------------------------------------------------------------
example_id: 18687
import warnings
------------------------------------------------------------
------------------------------------------------------------
example_id: 18688
from django.utils.deprecation import RemovedInDjango19Warning
------------------------------------------------------------
------------------------------------------------------------
example_id: 18689
from django.utils.encoding import force_str, force_text, DEFAULT_LOCALE_ENCODING
------------------------------------------------------------
------------------------------------------------------------
example_id: 18691
class FixedOffset(tzinfo):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18692
def __init__(self, offset):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18694
if isinstance(offset, timedelta):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18697
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18698
self.__offset = timedelta(minutes=offset)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18701
def __repr__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18702
return self.__name
------------------------------------------------------------
------------------------------------------------------------
example_id: 18703
def __getinitargs__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18704
return self.__offset,
------------------------------------------------------------
------------------------------------------------------------
example_id: 18705
def utcoffset(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18706
return self.__offset
------------------------------------------------------------
------------------------------------------------------------
example_id: 18707
def tzname(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18708
return self.__name
------------------------------------------------------------
------------------------------------------------------------
example_id: 18709
def dst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18710
return timedelta(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18711
class LocalTimezone(tzinfo):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18712
def __init__(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18714
tzinfo.__init__(self)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18716
self._tzname = self.tzname(dt)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18717
def __repr__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18718
return force_str(self._tzname)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18719
def __getinitargs__(self):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18720
return self.__dt,
------------------------------------------------------------
------------------------------------------------------------
example_id: 18721
def utcoffset(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18722
if self._isdst(dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18724
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18726
def dst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18727
if self._isdst(dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18729
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18730
return timedelta(0)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18731
def tzname(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18733
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18735
try:
    pass
except UnicodeDecodeError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18736
return None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18737
def _isdst(self, dt):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18739
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18740
stamp = time.mktime(tt)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18743
stamp = time.mktime(tt)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18744
tt = time.localtime(stamp)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18745
return tt.tm_isdst > 0
------------------------------------------------------------
------------------------------------------------------------
example_id: 18746
from __future__ import absolute_import
------------------------------------------------------------
------------------------------------------------------------
example_id: 18747
import warnings
------------------------------------------------------------
------------------------------------------------------------
example_id: 18748
from django.utils.deprecation import RemovedInDjango19Warning
------------------------------------------------------------
------------------------------------------------------------
example_id: 18749
warnings.warn('_STR:0_', RemovedInDjango19Warning, stacklevel=2)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18750
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18752
try:
    pass
except ImportError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18754
from __future__ import unicode_literals
------------------------------------------------------------
------------------------------------------------------------
example_id: 18755
import datetime
------------------------------------------------------------
------------------------------------------------------------
example_id: 18756
import os
------------------------------------------------------------
------------------------------------------------------------
example_id: 18757
import subprocess
------------------------------------------------------------
------------------------------------------------------------
example_id: 18758
def get_version(version=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18759
version = get_complete_version(version)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18763
git_changeset = get_git_changeset()
------------------------------------------------------------
------------------------------------------------------------
example_id: 18764
if git_changeset:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18770
def get_major_version(version=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18771
version = get_complete_version(version)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18774
return major
------------------------------------------------------------
------------------------------------------------------------
example_id: 18775
def get_complete_version(version=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18776
if version is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18777
from django import VERSION as version
------------------------------------------------------------
------------------------------------------------------------
example_id: 18778
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18782
def get_git_changeset():
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18783
if hasattr(get_git_changeset, '_STR:0_'):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18784
return get_git_changeset.cache
------------------------------------------------------------
------------------------------------------------------------
example_id: 18787
timestamp = git_log.communicate()[0]
------------------------------------------------------------
------------------------------------------------------------
example_id: 18788
try:
    pass
except:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18789
timestamp = datetime.datetime.utcfromtimestamp(int(timestamp))
------------------------------------------------------------
------------------------------------------------------------
example_id: 18790
try:
    pass
except ValueError:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18791
changeset = None
------------------------------------------------------------
------------------------------------------------------------
example_id: 18792
if True:
    pass
else:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18793
changeset = timestamp.strftime('_STR:0_')
------------------------------------------------------------
------------------------------------------------------------
example_id: 18795
return changeset
------------------------------------------------------------
------------------------------------------------------------
example_id: 18796
from xml.sax.saxutils import XMLGenerator
------------------------------------------------------------
------------------------------------------------------------
example_id: 18797
class SimplerXMLGenerator(XMLGenerator):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18798
def addQuickElement(self, name, contents=None, attrs=None):
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18799
if attrs is None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18800
attrs = {}
------------------------------------------------------------
------------------------------------------------------------
example_id: 18801
self.startElement(name, attrs)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18802
if contents is not None:
    pass
------------------------------------------------------------
------------------------------------------------------------
example_id: 18803
self.characters(contents)
------------------------------------------------------------
------------------------------------------------------------
example_id: 18804
self.endElement(name)
------------------------------------------------------------
17000, 17001, 17004, 17007, 17008, 17009, 17011, 17013, 17014, 17015, 17016, 17018, 17019, 17022, 17023, 17024, 17025, 17026, 17027, 17028, 17029, 17030, 17031, 17033, 17035, 17036, 17037, 17040, 17042, 17043, 17044, 17045, 17046, 17047, 17048, 17049, 17050, 17051, 17052, 17053, 17054, 17055, 17056, 17057, 17058, 17059, 17060, 17061, 17062, 17063, 17064, 17065, 17066, 17067, 17069, 17070, 17071, 17072, 17074, 17075, 17076, 17078, 17079, 17080, 17081, 17083, 17084, 17085, 17086, 17088, 17089, 17090, 17091, 17092, 17093, 17094, 17095, 17097, 17099, 17101, 17103, 17105, 17107, 17110, 17111, 17112, 17113, 17116, 17120, 17121, 17122, 17123, 17125, 17126, 17127, 17128, 17131, 17132, 17133, 17135, 17137, 17139, 17141, 17142, 17143, 17144, 17145, 17146, 17147, 17148, 17149, 17150, 17151, 17152, 17153, 17157, 17158, 17159, 17160, 17161, 17162, 17163, 17165, 17166, 17167, 17168, 17171, 17172, 17173, 17174, 17175, 17176, 17177, 17178, 17179, 17180, 17181, 17182, 17183, 17184, 17186, 17187, 17188, 17190, 17191, 17192, 17193, 17195, 17196, 17197, 17198, 17199, 17201, 17203, 17204, 17206, 17207, 17209, 17211, 17213, 17216, 17218, 17220, 17223, 17225, 17227, 17230, 17232, 17234, 17237, 17239, 17241, 17244, 17246, 17248, 17251, 17253, 17259, 17262, 17264, 17265, 17267, 17268, 17269, 17271, 17272, 17273, 17274, 17275, 17276, 17277, 17278, 17279, 17280, 17281, 17282, 17283, 17284, 17285, 17286, 17287, 17288, 17289, 17290, 17292, 17293, 17294, 17295, 17296, 17300, 17302, 17303, 17305, 17306, 17307, 17309, 17310, 17311, 17312, 17315, 17316, 17317, 17320, 17321, 17326, 17328, 17330, 17332, 17334, 17335, 17337, 17338, 17339, 17341, 17343, 17345, 17346, 17347, 17348, 17349, 17350, 17351, 17352, 17353, 17354, 17356, 17357, 17358, 17359, 17360, 17362, 17364, 17368, 17370, 17371, 17372, 17374, 17376, 17377, 17378, 17379, 17381, 17382, 17387, 17388, 17390, 17391, 17392, 17393, 17394, 17397, 17398, 17399, 17400, 17401, 17403, 17404, 17405, 17407, 17409, 17410, 17411, 17413, 17414, 17415, 17416, 17417, 17418, 17419, 17420, 17421, 17424, 17426, 17427, 17429, 17431, 17432, 17433, 17434, 17435, 17437, 17438, 17439, 17440, 17441, 17442, 17445, 17446, 17447, 17448, 17451, 17452, 17453, 17455, 17457, 17458, 17459, 17460, 17461, 17462, 17463, 17464, 17465, 17466, 17467, 17468, 17469, 17470, 17471, 17472, 17473, 17474, 17476, 17478, 17482, 17483, 17484, 17487, 17488, 17489, 17490, 17491, 17492, 17493, 17494, 17495, 17496, 17497, 17499, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17507, 17508, 17509, 17510, 17511, 17512, 17513, 17514, 17516, 17517, 17518, 17519, 17521, 17522, 17523, 17524, 17525, 17526, 17527, 17528, 17529, 17530, 17531, 17532, 17533, 17534, 17535, 17536, 17537, 17538, 17540, 17541, 17542, 17543, 17545, 17546, 17547, 17554, 17556, 17557, 17558, 17560, 17562, 17563, 17565, 17570, 17571, 17572, 17575, 17576, 17577, 17578, 17580, 17581, 17582, 17583, 17584, 17587, 17591, 17592, 17593, 17594, 17595, 17597, 17598, 17600, 17601, 17602, 17603, 17604, 17605, 17606, 17607, 17608, 17609, 17610, 17611, 17612, 17613, 17614, 17616, 17617, 17618, 17624, 17625, 17626, 17627, 17628, 17629, 17636, 17637, 17638, 17642, 17643, 17644, 17645, 17646, 17647, 17650, 17652, 17653, 17656, 17659, 17660, 17661, 17662, 17663, 17664, 17665, 17666, 17667, 17669, 17670, 17671, 17672, 17673, 17674, 17675, 17676, 17677, 17678, 17679, 17680, 17682, 17684, 17685, 17687, 17688, 17689, 17690, 17694, 17695, 17697, 17699, 17700, 17701, 17702, 17706, 17707, 17708, 17710, 17711, 17712, 17713, 17716, 17717, 17718, 17719, 17720, 17721, 17722, 17724, 17725, 17726, 17728, 17729, 17731, 17733, 17734, 17736, 17738, 17739, 17741, 17742, 17744, 17745, 17746, 17747, 17750, 17751, 17752, 17753, 17754, 17757, 17758, 17759, 17761, 17762, 17763, 17764, 17765, 17766, 17767, 17768, 17769, 17770, 17771, 17772, 17773, 17774, 17775, 17776, 17777, 17778, 17781, 17784, 17786, 17787, 17788, 17791, 17793, 17794, 17796, 17803, 17805, 17806, 17808, 17809, 17810, 17811, 17812, 17813, 17814, 17816, 17817, 17821, 17822, 17823, 17824, 17825, 17826, 17828, 17829, 17830, 17831, 17832, 17833, 17835, 17836, 17838, 17839, 17844, 17846, 17847, 17848, 17849, 17850, 17856, 17857, 17862, 17863, 17865, 17866, 17871, 17873, 17877, 17878, 17879, 17880, 17881, 17882, 17883, 17884, 17885, 17888, 17889, 17890, 17891, 17892, 17893, 17894, 17895, 17896, 17897, 17898, 17899, 17900, 17901, 17902, 17903, 17904, 17905, 17906, 17907, 17908, 17909, 17910, 17912, 17914, 17915, 17917, 17918, 17919, 17920, 17921, 17922, 17924, 17925, 17926, 17927, 17928, 17929, 17930, 17933, 17934, 17935, 17936, 17938, 17939, 17940, 17941, 17943, 17945, 17946, 17948, 17949, 17954, 17955, 17956, 17957, 17958, 17959, 17960, 17961, 17962, 17963, 17964, 17966, 17967, 17969, 17971, 17972, 17973, 17974, 17975, 17976, 17977, 17978, 17979, 17981, 17983, 17985, 17986, 17987, 17988, 17990, 17991, 17992, 17993, 17994, 17995, 17996, 17997, 17998, 17999, 18000, 18003, 18004, 18005, 18007, 18008, 18009, 18010, 18011, 18013, 18014, 18015, 18017, 18019, 18020, 18022, 18023, 18024, 18026, 18028, 18029, 18030, 18031, 18032, 18033, 18034, 18035, 18038, 18039, 18040, 18041, 18042, 18043, 18044, 18045, 18046, 18048, 18049, 18050, 18051, 18053, 18056, 18058, 18060, 18062, 18064, 18070, 18071, 18073, 18074, 18075, 18077, 18078, 18079, 18081, 18082, 18083, 18084, 18085, 18086, 18087, 18088, 18089, 18091, 18092, 18096, 18098, 18099, 18100, 18101, 18102, 18103, 18104, 18105, 18106, 18107, 18108, 18109, 18110, 18111, 18112, 18113, 18114, 18115, 18116, 18117, 18118, 18119, 18120, 18121, 18122, 18123, 18124, 18125, 18126, 18127, 18128, 18129, 18130, 18131, 18132, 18135, 18136, 18137, 18138, 18139, 18140, 18141, 18142, 18143, 18144, 18145, 18146, 18148, 18149, 18151, 18152, 18153, 18154, 18155, 18156, 18157, 18158, 18159, 18161, 18165, 18169, 18170, 18171, 18172, 18173, 18174, 18177, 18179, 18181, 18182, 18183, 18184, 18185, 18186, 18187, 18188, 18189, 18190, 18191, 18192, 18193, 18194, 18195, 18196, 18197, 18198, 18199, 18200, 18201, 18202, 18203, 18204, 18205, 18206, 18207, 18208, 18209, 18210, 18211, 18214, 18215, 18216, 18217, 18219, 18220, 18221, 18222, 18223, 18224, 18226, 18227, 18229, 18233, 18234, 18235, 18237, 18239, 18240, 18241, 18242, 18243, 18244, 18245, 18246, 18248, 18249, 18250, 18251, 18252, 18253, 18254, 18257, 18258, 18259, 18260, 18263, 18264, 18265, 18266, 18267, 18268, 18269, 18270, 18272, 18274, 18275, 18276, 18277, 18278, 18280, 18281, 18282, 18283, 18284, 18285, 18286, 18287, 18288, 18289, 18290, 18291, 18292, 18293, 18294, 18295, 18298, 18299, 18302, 18303, 18304, 18305, 18306, 18307, 18308, 18310, 18311, 18312, 18313, 18314, 18315, 18316, 18317, 18318, 18319, 18320, 18322, 18323, 18324, 18325, 18327, 18328, 18331, 18333, 18334, 18335, 18337, 18338, 18339, 18340, 18341, 18342, 18344, 18345, 18346, 18347, 18349, 18352, 18354, 18356, 18358, 18360, 18361, 18363, 18365, 18366, 18367, 18368, 18370, 18374, 18375, 18376, 18379, 18380, 18381, 18382, 18383, 18386, 18387, 18388, 18389, 18390, 18391, 18392, 18395, 18396, 18397, 18398, 18399, 18400, 18401, 18403, 18404, 18405, 18406, 18407, 18408, 18409, 18410, 18411, 18412, 18413, 18414, 18415, 18416, 18417, 18418, 18419, 18420, 18421, 18422, 18427, 18428, 18429, 18430, 18433, 18434, 18435, 18436, 18437, 18438, 18439, 18440, 18441, 18442, 18443, 18444, 18445, 18446, 18447, 18451, 18452, 18454, 18455, 18458, 18459, 18460, 18461, 18462, 18463, 18464, 18465, 18466, 18467, 18468, 18469, 18470, 18471, 18472, 18473, 18475, 18476, 18477, 18478, 18479, 18481, 18482, 18483, 18484, 18485, 18487, 18488, 18489, 18490, 18491, 18492, 18495, 18496, 18497, 18499, 18502, 18503, 18504, 18505, 18506, 18508, 18511, 18512, 18513, 18514, 18515, 18516, 18517, 18518, 18519, 18520, 18521, 18522, 18524, 18525, 18527, 18530, 18531, 18532, 18533, 18534, 18535, 18536, 18538, 18539, 18541, 18542, 18543, 18545, 18547, 18550, 18553, 18554, 18555, 18556, 18558, 18563, 18564, 18565, 18566, 18567, 18569, 18570, 18571, 18572, 18573, 18574, 18575, 18577, 18578, 18579, 18580, 18581, 18582, 18583, 18584, 18585, 18586, 18587, 18588, 18590, 18591, 18592, 18593, 18594, 18596, 18597, 18599, 18602, 18604, 18608, 18609, 18610, 18611, 18612, 18614, 18615, 18618, 18619, 18620, 18621, 18622, 18623, 18624, 18625, 18629, 18630, 18631, 18632, 18635, 18636, 18637, 18639, 18641, 18642, 18643, 18646, 18647, 18648, 18650, 18652, 18653, 18654, 18655, 18656, 18657, 18658, 18659, 18660, 18661, 18662, 18663, 18664, 18665, 18666, 18667, 18668, 18669, 18670, 18673, 18674, 18675, 18676, 18677, 18678, 18680, 18681, 18682, 18684, 18686, 18687, 18688, 18689, 18691, 18692, 18694, 18697, 18698, 18701, 18702, 18703, 18704, 18705, 18706, 18707, 18708, 18709, 18710, 18711, 18712, 18714, 18716, 18717, 18718, 18719, 18720, 18721, 18722, 18724, 18726, 18727, 18729, 18730, 18731, 18733, 18735, 18736, 18737, 18739, 18740, 18743, 18744, 18745, 18746, 18747, 18748, 18749, 18750, 18752, 18754, 18755, 18756, 18757, 18758, 18759, 18763, 18764, 18770, 18771, 18774, 18775, 18776, 18777, 18778, 18782, 18783, 18784, 18787, 18788, 18789, 18790, 18791, 18792, 18793, 18795, 18796, 18797, 18798, 18799, 18800, 18801, 18802, 18803, 18804